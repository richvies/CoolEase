ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_hal_cortex.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_NVIC_SetPriority
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_NVIC_SetPriority:
  25              	.LVL0:
  26              	.LFB34:
  27              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @file    stm32l0xx_hal_cortex.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *           + Initialization and Configuration functions
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *           + Peripheral Control functions 
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   @verbatim  
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ==============================================================================
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ==============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     [..]  
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     ===========================================================
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     [..]     
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     The Cortex M0+ exceptions are managed by CMSIS functions.
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****       (#) Enable and Configure the priority of the selected IRQ Channels. 
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****              The priority can be 0..3. 
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         -@- Lower priority values gives higher priority.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         -@- Priority Order:
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****             (#@) Lowest priority.
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****             (#@) Lowest hardware priority (IRQn position).  
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****      (#)  Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority() 
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****      (#)  Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ() 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 2


  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****       
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     [..]  
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     ========================================================
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     [..]
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****            
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config()function calls the SysTick_Config() function which
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        is a CMSIS function that:
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x03).
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 	
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the function
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The HAL_SYSTICK_CLKSourceConfig() function is defined
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        inside the stm32l0xx_hal_cortex.c file.
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                             
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   @endverbatim
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ******************************************************************************
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @attention
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * All rights reserved.</center></h2>
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * the "License"; You may not use this file except in compliance with the
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * License. You may obtain a copy of the License at:
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ******************************************************************************  
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** #include "stm32l0xx_hal.h"
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /** @addtogroup STM32L0xx_HAL_Driver
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @{
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /** @addtogroup CORTEX
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 3


  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @{
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @{
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions 
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****  *
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** @verbatim    
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ==============================================================================
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ==============================================================================
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     [..]
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****       Systick functionalities 
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** @endverbatim
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @{
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  IRQn External interrupt number .
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         This parameter can be an enumerator of  IRQn_Type enumeration
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  PreemptPriority The pre-emption priority for the IRQn channel.
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 3.
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  SubPriority the subpriority level for the IRQ channel.
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         no subpriority supported in Cortex M0+ based products.   
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** { 
  28              		.loc 1 133 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 133 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 4


 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     /* Check the parameters */
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  40              		.loc 1 135 3 is_stmt 1 view .LVU2
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   NVIC_SetPriority(IRQn,PreemptPriority);
  41              		.loc 1 136 3 view .LVU3
  42              	.LVL1:
  43              	.LBB32:
  44              	.LBI32:
  45              		.file 2 "Drivers/CMSIS/Include/core_cm0plus.h"
   1:Drivers/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:Drivers/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0plus.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm0plus.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0plus.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm0plus.h **** 
   9:Drivers/CMSIS/Include/core_cm0plus.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm0plus.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm0plus.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm0plus.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm0plus.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm0plus.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm0plus.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm0plus.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm0plus.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm0plus.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm0plus.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm0plus.h ****    *
  21:Drivers/CMSIS/Include/core_cm0plus.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm0plus.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm0plus.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm0plus.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm0plus.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm0plus.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm0plus.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm0plus.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm0plus.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm0plus.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm0plus.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm0plus.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm0plus.h **** 
  34:Drivers/CMSIS/Include/core_cm0plus.h **** 
  35:Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm0plus.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  40:Drivers/CMSIS/Include/core_cm0plus.h **** 
  41:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm0plus.h **** 
  44:Drivers/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm0plus.h **** 
  46:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 5


  49:Drivers/CMSIS/Include/core_cm0plus.h **** 
  50:Drivers/CMSIS/Include/core_cm0plus.h **** /**
  51:Drivers/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm0plus.h **** 
  54:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm0plus.h **** 
  57:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm0plus.h **** 
  60:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  63:Drivers/CMSIS/Include/core_cm0plus.h **** 
  64:Drivers/CMSIS/Include/core_cm0plus.h **** 
  65:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm0plus.h **** /**
  69:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  70:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
  71:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  72:Drivers/CMSIS/Include/core_cm0plus.h **** 
  73:Drivers/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  74:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (0x04U)                                   /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (0x1EU)                                   /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           ) /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm0plus.h **** 
  79:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                (0x00U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm0plus.h **** 
  81:Drivers/CMSIS/Include/core_cm0plus.h **** 
  82:Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm0plus.h **** 
  87:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm0plus.h **** 
  92:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm0plus.h **** 
  97:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm0plus.h **** 
 102:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 6


 106:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm0plus.h **** 
 111:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm0plus.h **** 
 117:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 118:Drivers/CMSIS/Include/core_cm0plus.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 120:Drivers/CMSIS/Include/core_cm0plus.h **** 
 121:Drivers/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm0plus.h **** */
 124:Drivers/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm0plus.h **** 
 126:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm0plus.h **** 
 131:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm0plus.h **** 
 136:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm0plus.h **** 
 141:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm0plus.h **** 
 146:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm0plus.h **** 
 151:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm0plus.h **** 
 156:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm0plus.h **** 
 161:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 162:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 7


 163:Drivers/CMSIS/Include/core_cm0plus.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm0plus.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm0plus.h **** 
 166:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm0plus.h **** }
 168:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 169:Drivers/CMSIS/Include/core_cm0plus.h **** 
 170:Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm0plus.h **** 
 172:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm0plus.h **** 
 174:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm0plus.h **** 
 177:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 180:Drivers/CMSIS/Include/core_cm0plus.h **** 
 181:Drivers/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 184:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 185:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm0plus.h **** 
 188:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 189:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 190:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm0plus.h **** 
 193:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 194:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 195:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm0plus.h **** 
 198:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 199:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 200:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 201:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 202:Drivers/CMSIS/Include/core_cm0plus.h **** 
 203:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 204:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 205:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 206:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 207:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 208:Drivers/CMSIS/Include/core_cm0plus.h **** 
 209:Drivers/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 210:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 211:Drivers/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 212:Drivers/CMSIS/Include/core_cm0plus.h **** 
 213:Drivers/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 214:Drivers/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 215:Drivers/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 216:Drivers/CMSIS/Include/core_cm0plus.h **** */
 217:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 218:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 219:Drivers/CMSIS/Include/core_cm0plus.h **** #else
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 8


 220:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 221:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 222:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 223:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 224:Drivers/CMSIS/Include/core_cm0plus.h **** 
 225:Drivers/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 226:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 229:Drivers/CMSIS/Include/core_cm0plus.h **** 
 230:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 231:Drivers/CMSIS/Include/core_cm0plus.h **** 
 232:Drivers/CMSIS/Include/core_cm0plus.h **** 
 233:Drivers/CMSIS/Include/core_cm0plus.h **** 
 234:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 235:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 236:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 237:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register
 238:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 239:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 240:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 241:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 243:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 244:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 245:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 246:Drivers/CMSIS/Include/core_cm0plus.h **** */
 247:Drivers/CMSIS/Include/core_cm0plus.h **** 
 248:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 249:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 250:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 251:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 252:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 253:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 254:Drivers/CMSIS/Include/core_cm0plus.h **** 
 255:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 256:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 257:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 258:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm0plus.h **** {
 260:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 261:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 262:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 263:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 264:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 265:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 266:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 267:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 268:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 269:Drivers/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 270:Drivers/CMSIS/Include/core_cm0plus.h **** 
 271:Drivers/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 272:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 273:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 274:Drivers/CMSIS/Include/core_cm0plus.h **** 
 275:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 276:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 9


 277:Drivers/CMSIS/Include/core_cm0plus.h **** 
 278:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 279:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm0plus.h **** 
 281:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm0plus.h **** 
 284:Drivers/CMSIS/Include/core_cm0plus.h **** 
 285:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 286:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 288:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 289:Drivers/CMSIS/Include/core_cm0plus.h **** {
 290:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 291:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 292:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 295:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:Drivers/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 297:Drivers/CMSIS/Include/core_cm0plus.h **** 
 298:Drivers/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 299:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:Drivers/CMSIS/Include/core_cm0plus.h **** 
 302:Drivers/CMSIS/Include/core_cm0plus.h **** 
 303:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 304:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 306:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 307:Drivers/CMSIS/Include/core_cm0plus.h **** {
 308:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 309:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 310:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 314:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 315:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 316:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 317:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 318:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 319:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 320:Drivers/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 321:Drivers/CMSIS/Include/core_cm0plus.h **** 
 322:Drivers/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 323:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 324:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm0plus.h **** 
 326:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 327:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm0plus.h **** 
 329:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 330:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 331:Drivers/CMSIS/Include/core_cm0plus.h **** 
 332:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 333:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 10


 334:Drivers/CMSIS/Include/core_cm0plus.h **** 
 335:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 336:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 337:Drivers/CMSIS/Include/core_cm0plus.h **** 
 338:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 340:Drivers/CMSIS/Include/core_cm0plus.h **** 
 341:Drivers/CMSIS/Include/core_cm0plus.h **** 
 342:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 343:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 344:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 345:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 346:Drivers/CMSIS/Include/core_cm0plus.h **** {
 347:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 348:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 349:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 350:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 351:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 352:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 353:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 354:Drivers/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 355:Drivers/CMSIS/Include/core_cm0plus.h **** 
 356:Drivers/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 357:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 358:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 359:Drivers/CMSIS/Include/core_cm0plus.h **** 
 360:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 361:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 362:Drivers/CMSIS/Include/core_cm0plus.h **** 
 363:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 364:Drivers/CMSIS/Include/core_cm0plus.h **** 
 365:Drivers/CMSIS/Include/core_cm0plus.h **** 
 366:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 367:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 368:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 369:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 370:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 371:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 372:Drivers/CMSIS/Include/core_cm0plus.h **** 
 373:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 374:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 375:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 376:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 377:Drivers/CMSIS/Include/core_cm0plus.h **** {
 378:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 379:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 380:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 381:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 382:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 383:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 384:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 385:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 386:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 387:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 388:Drivers/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 389:Drivers/CMSIS/Include/core_cm0plus.h **** 
 390:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 11


 391:Drivers/CMSIS/Include/core_cm0plus.h **** 
 392:Drivers/CMSIS/Include/core_cm0plus.h **** 
 393:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 394:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 395:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 396:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 397:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 398:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 399:Drivers/CMSIS/Include/core_cm0plus.h **** 
 400:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 401:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 402:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 403:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 404:Drivers/CMSIS/Include/core_cm0plus.h **** {
 405:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 406:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 407:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__VTOR_PRESENT == 1U)
 408:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 409:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 410:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 411:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 412:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 413:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 414:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 415:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 416:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 417:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 418:Drivers/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 419:Drivers/CMSIS/Include/core_cm0plus.h **** 
 420:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 421:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0plus.h **** 
 424:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 425:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0plus.h **** 
 427:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 428:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0plus.h **** 
 430:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 431:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm0plus.h **** 
 433:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm0plus.h **** 
 436:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 437:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm0plus.h **** 
 440:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm0plus.h **** 
 443:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm0plus.h **** 
 446:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 12


 448:Drivers/CMSIS/Include/core_cm0plus.h **** 
 449:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm0plus.h **** 
 452:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm0plus.h **** 
 455:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm0plus.h **** 
 458:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 459:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm0plus.h **** 
 461:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 462:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm0plus.h **** 
 464:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__VTOR_PRESENT == 1U)
 465:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 466:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 469:Drivers/CMSIS/Include/core_cm0plus.h **** 
 470:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 471:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm0plus.h **** 
 474:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm0plus.h **** 
 477:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm0plus.h **** 
 480:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm0plus.h **** 
 483:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm0plus.h **** 
 486:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 487:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm0plus.h **** 
 490:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm0plus.h **** 
 493:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm0plus.h **** 
 496:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 497:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm0plus.h **** 
 500:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm0plus.h **** 
 503:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 504:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 13


 505:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm0plus.h **** 
 507:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 508:Drivers/CMSIS/Include/core_cm0plus.h **** 
 509:Drivers/CMSIS/Include/core_cm0plus.h **** 
 510:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 511:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 512:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 513:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 514:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 515:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 516:Drivers/CMSIS/Include/core_cm0plus.h **** 
 517:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 518:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 519:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 520:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 521:Drivers/CMSIS/Include/core_cm0plus.h **** {
 522:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 523:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 524:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 525:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 526:Drivers/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 527:Drivers/CMSIS/Include/core_cm0plus.h **** 
 528:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 529:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 530:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 531:Drivers/CMSIS/Include/core_cm0plus.h **** 
 532:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 533:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 534:Drivers/CMSIS/Include/core_cm0plus.h **** 
 535:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 536:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 537:Drivers/CMSIS/Include/core_cm0plus.h **** 
 538:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 539:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 540:Drivers/CMSIS/Include/core_cm0plus.h **** 
 541:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 542:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 543:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 544:Drivers/CMSIS/Include/core_cm0plus.h **** 
 545:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 546:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 547:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 548:Drivers/CMSIS/Include/core_cm0plus.h **** 
 549:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 550:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 551:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 552:Drivers/CMSIS/Include/core_cm0plus.h **** 
 553:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 554:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 555:Drivers/CMSIS/Include/core_cm0plus.h **** 
 556:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 557:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 558:Drivers/CMSIS/Include/core_cm0plus.h **** 
 559:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 560:Drivers/CMSIS/Include/core_cm0plus.h **** 
 561:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__MPU_PRESENT == 1U)
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 14


 562:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 563:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 564:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 565:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 566:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 568:Drivers/CMSIS/Include/core_cm0plus.h **** 
 569:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 570:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 571:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 572:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 573:Drivers/CMSIS/Include/core_cm0plus.h **** {
 574:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 575:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 576:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 577:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 578:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 579:Drivers/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 580:Drivers/CMSIS/Include/core_cm0plus.h **** 
 581:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 582:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 583:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 584:Drivers/CMSIS/Include/core_cm0plus.h **** 
 585:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 586:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 587:Drivers/CMSIS/Include/core_cm0plus.h **** 
 588:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 589:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 590:Drivers/CMSIS/Include/core_cm0plus.h **** 
 591:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 592:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
 593:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 594:Drivers/CMSIS/Include/core_cm0plus.h **** 
 595:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 596:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 597:Drivers/CMSIS/Include/core_cm0plus.h **** 
 598:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 599:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 600:Drivers/CMSIS/Include/core_cm0plus.h **** 
 601:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 602:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 603:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 604:Drivers/CMSIS/Include/core_cm0plus.h **** 
 605:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 606:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 607:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 608:Drivers/CMSIS/Include/core_cm0plus.h **** 
 609:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 610:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 611:Drivers/CMSIS/Include/core_cm0plus.h **** 
 612:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 613:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 614:Drivers/CMSIS/Include/core_cm0plus.h **** 
 615:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 616:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 617:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 618:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 15


 619:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 620:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 621:Drivers/CMSIS/Include/core_cm0plus.h **** 
 622:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 623:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 624:Drivers/CMSIS/Include/core_cm0plus.h **** 
 625:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 626:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 627:Drivers/CMSIS/Include/core_cm0plus.h **** 
 628:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 629:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 630:Drivers/CMSIS/Include/core_cm0plus.h **** 
 631:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 632:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 633:Drivers/CMSIS/Include/core_cm0plus.h **** 
 634:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 635:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 636:Drivers/CMSIS/Include/core_cm0plus.h **** 
 637:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 638:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 639:Drivers/CMSIS/Include/core_cm0plus.h **** 
 640:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 641:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 642:Drivers/CMSIS/Include/core_cm0plus.h **** 
 643:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 644:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 645:Drivers/CMSIS/Include/core_cm0plus.h **** 
 646:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 647:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 648:Drivers/CMSIS/Include/core_cm0plus.h **** 
 649:Drivers/CMSIS/Include/core_cm0plus.h **** 
 650:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 651:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 652:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 653:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 654:Drivers/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 655:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 656:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 657:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 658:Drivers/CMSIS/Include/core_cm0plus.h **** 
 659:Drivers/CMSIS/Include/core_cm0plus.h **** 
 660:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 661:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 662:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 663:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 664:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 665:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 666:Drivers/CMSIS/Include/core_cm0plus.h **** 
 667:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 668:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 669:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 670:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field.
 671:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 672:Drivers/CMSIS/Include/core_cm0plus.h **** */
 673:Drivers/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
 674:Drivers/CMSIS/Include/core_cm0plus.h **** 
 675:Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 16


 676:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 677:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 678:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register.
 679:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 680:Drivers/CMSIS/Include/core_cm0plus.h **** */
 681:Drivers/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
 682:Drivers/CMSIS/Include/core_cm0plus.h **** 
 683:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 684:Drivers/CMSIS/Include/core_cm0plus.h **** 
 685:Drivers/CMSIS/Include/core_cm0plus.h **** 
 686:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 687:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 688:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 689:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 690:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 691:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 692:Drivers/CMSIS/Include/core_cm0plus.h **** 
 693:Drivers/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Cortex-M0+ Hardware */
 694:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 695:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 696:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 697:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 698:Drivers/CMSIS/Include/core_cm0plus.h **** 
 699:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 700:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 701:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 702:Drivers/CMSIS/Include/core_cm0plus.h **** 
 703:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__MPU_PRESENT == 1U)
 704:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 705:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 706:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 707:Drivers/CMSIS/Include/core_cm0plus.h **** 
 708:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} */
 709:Drivers/CMSIS/Include/core_cm0plus.h **** 
 710:Drivers/CMSIS/Include/core_cm0plus.h **** 
 711:Drivers/CMSIS/Include/core_cm0plus.h **** 
 712:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 713:Drivers/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
 714:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 715:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 716:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 717:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 718:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 719:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 720:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 721:Drivers/CMSIS/Include/core_cm0plus.h **** */
 722:Drivers/CMSIS/Include/core_cm0plus.h **** 
 723:Drivers/CMSIS/Include/core_cm0plus.h **** 
 724:Drivers/CMSIS/Include/core_cm0plus.h **** 
 725:Drivers/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 726:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 727:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 728:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 729:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 730:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 731:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 732:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 17


 733:Drivers/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 734:Drivers/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 735:Drivers/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 736:Drivers/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 737:Drivers/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 738:Drivers/CMSIS/Include/core_cm0plus.h **** 
 739:Drivers/CMSIS/Include/core_cm0plus.h **** 
 740:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 741:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Enable External Interrupt
 742:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 744:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 745:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 746:Drivers/CMSIS/Include/core_cm0plus.h **** {
 747:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 748:Drivers/CMSIS/Include/core_cm0plus.h **** }
 749:Drivers/CMSIS/Include/core_cm0plus.h **** 
 750:Drivers/CMSIS/Include/core_cm0plus.h **** 
 751:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 752:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Disable External Interrupt
 753:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
 754:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 755:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 756:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 757:Drivers/CMSIS/Include/core_cm0plus.h **** {
 758:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 759:Drivers/CMSIS/Include/core_cm0plus.h **** }
 760:Drivers/CMSIS/Include/core_cm0plus.h **** 
 761:Drivers/CMSIS/Include/core_cm0plus.h **** 
 762:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 763:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Pending Interrupt
 764:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
 765:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 766:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 767:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 768:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 769:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 770:Drivers/CMSIS/Include/core_cm0plus.h **** {
 771:Drivers/CMSIS/Include/core_cm0plus.h ****   return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL
 772:Drivers/CMSIS/Include/core_cm0plus.h **** }
 773:Drivers/CMSIS/Include/core_cm0plus.h **** 
 774:Drivers/CMSIS/Include/core_cm0plus.h **** 
 775:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 776:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Pending Interrupt
 777:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the pending bit of an external interrupt.
 778:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
 779:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 780:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 781:Drivers/CMSIS/Include/core_cm0plus.h **** {
 782:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 783:Drivers/CMSIS/Include/core_cm0plus.h **** }
 784:Drivers/CMSIS/Include/core_cm0plus.h **** 
 785:Drivers/CMSIS/Include/core_cm0plus.h **** 
 786:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 787:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 788:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Clears the pending bit of an external interrupt.
 789:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 18


 790:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 791:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 792:Drivers/CMSIS/Include/core_cm0plus.h **** {
 793:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 794:Drivers/CMSIS/Include/core_cm0plus.h **** }
 795:Drivers/CMSIS/Include/core_cm0plus.h **** 
 796:Drivers/CMSIS/Include/core_cm0plus.h **** 
 797:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 798:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Interrupt Priority
 799:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the priority of an interrupt.
 800:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    The priority cannot be set for every core interrupt.
 801:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 802:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 803:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 804:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
  46              		.loc 2 804 22 view .LVU4
  47              	.LBB33:
 805:Drivers/CMSIS/Include/core_cm0plus.h **** {
 806:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) < 0)
  48              		.loc 2 806 3 view .LVU5
  49              		.loc 2 806 6 is_stmt 0 view .LVU6
  50 0002 0028     		cmp	r0, #0
  51 0004 11DB     		blt	.L4
 807:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 808:Drivers/CMSIS/Include/core_cm0plus.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 809:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 810:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 811:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 812:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 813:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
  52              		.loc 2 813 5 is_stmt 1 view .LVU7
  53              		.loc 2 813 53 is_stmt 0 view .LVU8
  54 0006 8308     		lsrs	r3, r0, #2
  55              		.loc 2 813 52 view .LVU9
  56 0008 134D     		ldr	r5, .L5
  57 000a C033     		adds	r3, r3, #192
  58 000c 9B00     		lsls	r3, r3, #2
  59 000e 5C59     		ldr	r4, [r3, r5]
  60              		.loc 2 813 83 view .LVU10
  61 0010 0322     		movs	r2, #3
  62              	.LVL2:
  63              		.loc 2 813 83 view .LVU11
  64 0012 1040     		ands	r0, r2
  65              	.LVL3:
  66              		.loc 2 813 83 view .LVU12
  67 0014 C000     		lsls	r0, r0, #3
  68              		.loc 2 813 80 view .LVU13
  69 0016 FC32     		adds	r2, r2, #252
  70 0018 1600     		movs	r6, r2
  71 001a 8640     		lsls	r6, r6, r0
  72              		.loc 2 813 33 view .LVU14
  73 001c B443     		bics	r4, r6
 814:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  74              		.loc 2 814 20 view .LVU15
  75 001e 8901     		lsls	r1, r1, #6
  76              	.LVL4:
  77              		.loc 2 814 48 view .LVU16
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 19


  78 0020 0A40     		ands	r2, r1
  79              		.loc 2 814 68 view .LVU17
  80 0022 8240     		lsls	r2, r2, r0
 813:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  81              		.loc 2 813 102 view .LVU18
  82 0024 2243     		orrs	r2, r4
 813:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  83              		.loc 2 813 30 view .LVU19
  84 0026 5A51     		str	r2, [r3, r5]
  85              	.LVL5:
  86              	.L1:
 813:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  87              		.loc 2 813 30 view .LVU20
  88              	.LBE33:
  89              	.LBE32:
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
  90              		.loc 1 137 1 view .LVU21
  91              		@ sp needed
  92 0028 70BD     		pop	{r4, r5, r6, pc}
  93              	.LVL6:
  94              	.L4:
  95              	.LBB35:
  96              	.LBB34:
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  97              		.loc 2 808 5 is_stmt 1 view .LVU22
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  98              		.loc 2 808 53 is_stmt 0 view .LVU23
  99 002a 0F23     		movs	r3, #15
 100 002c 0340     		ands	r3, r0
 101 002e 083B     		subs	r3, r3, #8
 102 0030 9B08     		lsrs	r3, r3, #2
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 103              		.loc 2 808 52 view .LVU24
 104 0032 0633     		adds	r3, r3, #6
 105 0034 9B00     		lsls	r3, r3, #2
 106 0036 094A     		ldr	r2, .L5+4
 107              	.LVL7:
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 108              		.loc 2 808 52 view .LVU25
 109 0038 9446     		mov	ip, r2
 110 003a 6344     		add	r3, r3, ip
 111 003c 5D68     		ldr	r5, [r3, #4]
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 112              		.loc 2 808 83 view .LVU26
 113 003e 0324     		movs	r4, #3
 114 0040 2040     		ands	r0, r4
 115              	.LVL8:
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 116              		.loc 2 808 83 view .LVU27
 117 0042 C000     		lsls	r0, r0, #3
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 118              		.loc 2 808 80 view .LVU28
 119 0044 FF22     		movs	r2, #255
 120 0046 1400     		movs	r4, r2
 121 0048 8440     		lsls	r4, r4, r0
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 122              		.loc 2 808 33 view .LVU29
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 20


 123 004a A543     		bics	r5, r4
 809:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 124              		.loc 2 809 20 view .LVU30
 125 004c 8901     		lsls	r1, r1, #6
 126              	.LVL9:
 809:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 127              		.loc 2 809 48 view .LVU31
 128 004e 0A40     		ands	r2, r1
 809:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 129              		.loc 2 809 68 view .LVU32
 130 0050 8240     		lsls	r2, r2, r0
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 131              		.loc 2 808 102 view .LVU33
 132 0052 2A43     		orrs	r2, r5
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 133              		.loc 2 808 30 view .LVU34
 134 0054 5A60     		str	r2, [r3, #4]
 135 0056 E7E7     		b	.L1
 136              	.L6:
 137              		.align	2
 138              	.L5:
 139 0058 00E100E0 		.word	-536813312
 140 005c 00ED00E0 		.word	-536810240
 141              	.LBE34:
 142              	.LBE35:
 143              		.cfi_endproc
 144              	.LFE34:
 146              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 147              		.align	1
 148              		.global	HAL_NVIC_EnableIRQ
 149              		.syntax unified
 150              		.code	16
 151              		.thumb_func
 152              		.fpu softvfp
 154              	HAL_NVIC_EnableIRQ:
 155              	.LVL10:
 156              	.LFB35:
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         function should be called before. 
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  IRQn External interrupt number .
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         This parameter can be an enumerator of  IRQn_Type enumeration
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 157              		.loc 1 149 1 is_stmt 1 view -0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Check the parameters */
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 162              		.loc 1 151 3 view .LVU36
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 21


 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Enable interrupt */
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 163              		.loc 1 154 3 view .LVU37
 164              	.LBB36:
 165              	.LBI36:
 745:Drivers/CMSIS/Include/core_cm0plus.h **** {
 166              		.loc 2 745 22 view .LVU38
 167              	.LBB37:
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 168              		.loc 2 747 3 view .LVU39
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 169              		.loc 2 747 65 is_stmt 0 view .LVU40
 170 0000 1F23     		movs	r3, #31
 171 0002 1840     		ands	r0, r3
 172              	.LVL11:
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 173              		.loc 2 747 20 view .LVU41
 174 0004 1E3B     		subs	r3, r3, #30
 175 0006 8340     		lsls	r3, r3, r0
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 176              		.loc 2 747 18 view .LVU42
 177 0008 014A     		ldr	r2, .L8
 178 000a 1360     		str	r3, [r2]
 179              	.LVL12:
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 180              		.loc 2 747 18 view .LVU43
 181              	.LBE37:
 182              	.LBE36:
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 183              		.loc 1 155 1 view .LVU44
 184              		@ sp needed
 185 000c 7047     		bx	lr
 186              	.L9:
 187 000e C046     		.align	2
 188              	.L8:
 189 0010 00E100E0 		.word	-536813312
 190              		.cfi_endproc
 191              	.LFE35:
 193              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_NVIC_DisableIRQ
 196              		.syntax unified
 197              		.code	16
 198              		.thumb_func
 199              		.fpu softvfp
 201              	HAL_NVIC_DisableIRQ:
 202              	.LVL13:
 203              	.LFB36:
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  IRQn External interrupt number .
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 22


 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 204              		.loc 1 165 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     /* Check the parameters */
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 209              		.loc 1 167 3 view .LVU46
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Disable interrupt */
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 210              		.loc 1 170 3 view .LVU47
 211              	.LBB38:
 212              	.LBI38:
 756:Drivers/CMSIS/Include/core_cm0plus.h **** {
 213              		.loc 2 756 22 view .LVU48
 214              	.LBB39:
 758:Drivers/CMSIS/Include/core_cm0plus.h **** }
 215              		.loc 2 758 3 view .LVU49
 758:Drivers/CMSIS/Include/core_cm0plus.h **** }
 216              		.loc 2 758 65 is_stmt 0 view .LVU50
 217 0000 1F23     		movs	r3, #31
 218 0002 1840     		ands	r0, r3
 219              	.LVL14:
 758:Drivers/CMSIS/Include/core_cm0plus.h **** }
 220              		.loc 2 758 20 view .LVU51
 221 0004 1E3B     		subs	r3, r3, #30
 222 0006 8340     		lsls	r3, r3, r0
 758:Drivers/CMSIS/Include/core_cm0plus.h **** }
 223              		.loc 2 758 18 view .LVU52
 224 0008 0149     		ldr	r1, .L11
 225 000a 8022     		movs	r2, #128
 226 000c 8B50     		str	r3, [r1, r2]
 227              	.LVL15:
 758:Drivers/CMSIS/Include/core_cm0plus.h **** }
 228              		.loc 2 758 18 view .LVU53
 229              	.LBE39:
 230              	.LBE38:
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 231              		.loc 1 171 1 view .LVU54
 232              		@ sp needed
 233 000e 7047     		bx	lr
 234              	.L12:
 235              		.align	2
 236              	.L11:
 237 0010 00E100E0 		.word	-536813312
 238              		.cfi_endproc
 239              	.LFE36:
 241              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_NVIC_SystemReset
 244              		.syntax unified
 245              		.code	16
 246              		.thumb_func
 247              		.fpu softvfp
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 23


 249              	HAL_NVIC_SystemReset:
 250              	.LFB37:
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 251              		.loc 1 178 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ Volatile: function does not return.
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* System Reset */
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   NVIC_SystemReset();
 257              		.loc 1 180 3 view .LVU56
 258              	.LBB48:
 259              	.LBI48:
 815:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 816:Drivers/CMSIS/Include/core_cm0plus.h **** }
 817:Drivers/CMSIS/Include/core_cm0plus.h **** 
 818:Drivers/CMSIS/Include/core_cm0plus.h **** 
 819:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 820:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Interrupt Priority
 821:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the priority of an interrupt.
 822:Drivers/CMSIS/Include/core_cm0plus.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
 823:Drivers/CMSIS/Include/core_cm0plus.h ****            or negative to specify an internal (core) interrupt.
 824:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]   IRQn  Interrupt number.
 825:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             Interrupt Priority.
 826:Drivers/CMSIS/Include/core_cm0plus.h ****                       Value is aligned automatically to the implemented priority bits of the microc
 827:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 828:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
 829:Drivers/CMSIS/Include/core_cm0plus.h **** {
 830:Drivers/CMSIS/Include/core_cm0plus.h **** 
 831:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) < 0)
 832:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 833:Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 834:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 835:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 836:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 837:Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 838:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 839:Drivers/CMSIS/Include/core_cm0plus.h **** }
 840:Drivers/CMSIS/Include/core_cm0plus.h **** 
 841:Drivers/CMSIS/Include/core_cm0plus.h **** 
 842:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 843:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   System Reset
 844:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Initiates a system reset request to reset the MCU.
 845:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 846:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_SystemReset(void)
 260              		.loc 2 846 22 view .LVU57
 261              	.LBB49:
 847:Drivers/CMSIS/Include/core_cm0plus.h **** {
 848:Drivers/CMSIS/Include/core_cm0plus.h ****   __DSB();                                                          /* Ensure all outstanding memor
 262              		.loc 2 848 3 view .LVU58
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 24


 263              	.LBB50:
 264              	.LBI50:
 265              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 25


  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 26


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 27


 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 28


 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 29


 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 30


 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 31


 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 266              		.loc 3 427 53 view .LVU59
 267              	.LBB51:
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 268              		.loc 3 429 3 view .LVU60
 269              		.syntax divided
 270              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 271 0000 BFF34F8F 		dsb 0xF
 272              	@ 0 "" 2
 273              		.thumb
 274              		.syntax unified
 275              	.LBE51:
 276              	.LBE50:
 849:Drivers/CMSIS/Include/core_cm0plus.h ****                                                                        buffered write are completed
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 277              		.loc 2 850 3 view .LVU61
 278              		.loc 2 850 15 is_stmt 0 view .LVU62
 279 0004 034B     		ldr	r3, .L15
 280 0006 044A     		ldr	r2, .L15+4
 281 0008 DA60     		str	r2, [r3, #12]
 851:Drivers/CMSIS/Include/core_cm0plus.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
 852:Drivers/CMSIS/Include/core_cm0plus.h ****   __DSB();                                                          /* Ensure completion of memory 
 282              		.loc 2 852 3 is_stmt 1 view .LVU63
 283              	.LBB52:
 284              	.LBI52:
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 32


 285              		.loc 3 427 53 view .LVU64
 286              	.LBB53:
 287              		.loc 3 429 3 view .LVU65
 288              		.syntax divided
 289              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 290 000a BFF34F8F 		dsb 0xF
 291              	@ 0 "" 2
 292              		.thumb
 293              		.syntax unified
 294              	.L14:
 295              	.LBE53:
 296              	.LBE52:
 853:Drivers/CMSIS/Include/core_cm0plus.h **** 
 854:Drivers/CMSIS/Include/core_cm0plus.h ****   for(;;)                                                           /* wait until reset */
 297              		.loc 2 854 3 view .LVU66
 855:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 856:Drivers/CMSIS/Include/core_cm0plus.h ****     __NOP();
 298              		.loc 2 856 5 view .LVU67
 299              	.LBB54:
 300              	.LBI54:
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301              		.loc 3 373 53 view .LVU68
 302              	.LBB55:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303              		.loc 3 375 3 view .LVU69
 304              		.syntax divided
 305              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 306 000e C046     		nop
 307              	@ 0 "" 2
 308              		.thumb
 309              		.syntax unified
 310 0010 FDE7     		b	.L14
 311              	.L16:
 312 0012 C046     		.align	2
 313              	.L15:
 314 0014 00ED00E0 		.word	-536810240
 315 0018 0400FA05 		.word	100270084
 316              	.LBE55:
 317              	.LBE54:
 318              	.LBE49:
 319              	.LBE48:
 320              		.cfi_endproc
 321              	.LFE37:
 323              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 324              		.align	1
 325              		.global	HAL_SYSTICK_Config
 326              		.syntax unified
 327              		.code	16
 328              		.thumb_func
 329              		.fpu softvfp
 331              	HAL_SYSTICK_Config:
 332              	.LVL16:
 333              	.LFB38:
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 33


 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *                  - 1  Function failed.
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 334              		.loc 1 191 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 339              		.loc 1 192 4 view .LVU71
 340              	.LBB56:
 341              	.LBI56:
 857:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 858:Drivers/CMSIS/Include/core_cm0plus.h **** }
 859:Drivers/CMSIS/Include/core_cm0plus.h **** 
 860:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of CMSIS_Core_NVICFunctions */
 861:Drivers/CMSIS/Include/core_cm0plus.h **** 
 862:Drivers/CMSIS/Include/core_cm0plus.h **** 
 863:Drivers/CMSIS/Include/core_cm0plus.h **** 
 864:Drivers/CMSIS/Include/core_cm0plus.h **** /* ##################################    SysTick function  ########################################
 865:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 866:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 867:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
 868:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that configure the System.
 869:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 870:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 871:Drivers/CMSIS/Include/core_cm0plus.h **** 
 872:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__Vendor_SysTickConfig == 0U)
 873:Drivers/CMSIS/Include/core_cm0plus.h **** 
 874:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 875:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   System Tick Configuration
 876:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 877:Drivers/CMSIS/Include/core_cm0plus.h ****            Counter is in free running mode to generate periodic interrupts.
 878:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  ticks  Number of ticks between two interrupts.
 879:Drivers/CMSIS/Include/core_cm0plus.h ****   \return          0  Function succeeded.
 880:Drivers/CMSIS/Include/core_cm0plus.h ****   \return          1  Function failed.
 881:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
 882:Drivers/CMSIS/Include/core_cm0plus.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
 883:Drivers/CMSIS/Include/core_cm0plus.h ****            must contain a vendor-specific implementation of this function.
 884:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 885:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 342              		.loc 2 885 26 view .LVU72
 343              	.LBB57:
 886:Drivers/CMSIS/Include/core_cm0plus.h **** {
 887:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 344              		.loc 2 887 3 view .LVU73
 345              		.loc 2 887 14 is_stmt 0 view .LVU74
 346 0000 0138     		subs	r0, r0, #1
 347              	.LVL17:
 348              		.loc 2 887 6 view .LVU75
 349 0002 8023     		movs	r3, #128
 350 0004 5B04     		lsls	r3, r3, #17
 351 0006 9842     		cmp	r0, r3
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 34


 352 0008 0FD2     		bcs	.L19
 888:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 889:Drivers/CMSIS/Include/core_cm0plus.h ****     return (1UL);                                                   /* Reload value impossible */
 890:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 891:Drivers/CMSIS/Include/core_cm0plus.h **** 
 892:Drivers/CMSIS/Include/core_cm0plus.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 353              		.loc 2 892 3 is_stmt 1 view .LVU76
 354              		.loc 2 892 18 is_stmt 0 view .LVU77
 355 000a 094A     		ldr	r2, .L20
 356 000c 5060     		str	r0, [r2, #4]
 893:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 357              		.loc 2 893 3 is_stmt 1 view .LVU78
 358              	.LVL18:
 359              	.LBB58:
 360              	.LBI58:
 804:Drivers/CMSIS/Include/core_cm0plus.h **** {
 361              		.loc 2 804 22 view .LVU79
 362              	.LBB59:
 806:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 363              		.loc 2 806 3 view .LVU80
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 364              		.loc 2 808 5 view .LVU81
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 365              		.loc 2 808 52 is_stmt 0 view .LVU82
 366 000e 0948     		ldr	r0, .L20+4
 367              	.LVL19:
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 368              		.loc 2 808 52 view .LVU83
 369 0010 036A     		ldr	r3, [r0, #32]
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 370              		.loc 2 808 33 view .LVU84
 371 0012 1B02     		lsls	r3, r3, #8
 372 0014 1B0A     		lsrs	r3, r3, #8
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 373              		.loc 2 808 102 view .LVU85
 374 0016 C021     		movs	r1, #192
 375 0018 0906     		lsls	r1, r1, #24
 376 001a 0B43     		orrs	r3, r1
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 377              		.loc 2 808 30 view .LVU86
 378 001c 0362     		str	r3, [r0, #32]
 379              	.LVL20:
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 380              		.loc 2 808 30 view .LVU87
 381              	.LBE59:
 382              	.LBE58:
 894:Drivers/CMSIS/Include/core_cm0plus.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 383              		.loc 2 894 3 is_stmt 1 view .LVU88
 384              		.loc 2 894 18 is_stmt 0 view .LVU89
 385 001e 0023     		movs	r3, #0
 386 0020 9360     		str	r3, [r2, #8]
 895:Drivers/CMSIS/Include/core_cm0plus.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 387              		.loc 2 895 3 is_stmt 1 view .LVU90
 388              		.loc 2 895 18 is_stmt 0 view .LVU91
 389 0022 0733     		adds	r3, r3, #7
 390 0024 1360     		str	r3, [r2]
 896:Drivers/CMSIS/Include/core_cm0plus.h ****                    SysTick_CTRL_TICKINT_Msk   |
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 35


 897:Drivers/CMSIS/Include/core_cm0plus.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
 898:Drivers/CMSIS/Include/core_cm0plus.h ****   return (0UL);                                                     /* Function successful */
 391              		.loc 2 898 3 is_stmt 1 view .LVU92
 392              		.loc 2 898 10 is_stmt 0 view .LVU93
 393 0026 0020     		movs	r0, #0
 394              	.LVL21:
 395              	.L17:
 396              		.loc 2 898 10 view .LVU94
 397              	.LBE57:
 398              	.LBE56:
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 399              		.loc 1 193 1 view .LVU95
 400              		@ sp needed
 401 0028 7047     		bx	lr
 402              	.LVL22:
 403              	.L19:
 404              	.LBB61:
 405              	.LBB60:
 889:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 406              		.loc 2 889 12 view .LVU96
 407 002a 0120     		movs	r0, #1
 408              	.LVL23:
 889:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 409              		.loc 2 889 12 view .LVU97
 410              	.LBE60:
 411              	.LBE61:
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 412              		.loc 1 192 11 view .LVU98
 413 002c FCE7     		b	.L17
 414              	.L21:
 415 002e C046     		.align	2
 416              	.L20:
 417 0030 10E000E0 		.word	-536813552
 418 0034 00ED00E0 		.word	-536810240
 419              		.cfi_endproc
 420              	.LFE38:
 422              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 423              		.align	1
 424              		.global	HAL_NVIC_GetPriority
 425              		.syntax unified
 426              		.code	16
 427              		.thumb_func
 428              		.fpu softvfp
 430              	HAL_NVIC_GetPriority:
 431              	.LVL24:
 432              	.LFB39:
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @}
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2 Peripheral Control functions 
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****  *
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** @verbatim   
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ==============================================================================
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   ==============================================================================  
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 36


 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     [..]
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****       (NVIC, SYSTICK) functionalities. 
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****  
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****       
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** @endverbatim
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @{
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriority(IRQn_Type IRQn)
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 433              		.loc 1 223 1 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Get priority for Cortex-M system or device specific interrupts */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   return NVIC_GetPriority(IRQn);
 438              		.loc 1 225 3 view .LVU100
 439              	.LBB64:
 440              	.LBI64:
 828:Drivers/CMSIS/Include/core_cm0plus.h **** {
 441              		.loc 2 828 26 view .LVU101
 442              	.LBB65:
 831:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 443              		.loc 2 831 3 view .LVU102
 831:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 444              		.loc 2 831 6 is_stmt 0 view .LVU103
 445 0000 0028     		cmp	r0, #0
 446 0002 0CDB     		blt	.L25
 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 447              		.loc 2 837 5 is_stmt 1 view .LVU104
 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 448              		.loc 2 837 35 is_stmt 0 view .LVU105
 449 0004 8308     		lsrs	r3, r0, #2
 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 450              		.loc 2 837 33 view .LVU106
 451 0006 C033     		adds	r3, r3, #192
 452 0008 9B00     		lsls	r3, r3, #2
 453 000a 0E4A     		ldr	r2, .L26
 454 000c 9B58     		ldr	r3, [r3, r2]
 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 455              		.loc 2 837 53 view .LVU107
 456 000e 0322     		movs	r2, #3
 457 0010 1040     		ands	r0, r2
 458              	.LVL25:
 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 459              		.loc 2 837 53 view .LVU108
 460 0012 C000     		lsls	r0, r0, #3
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 37


 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 461              		.loc 2 837 50 view .LVU109
 462 0014 C340     		lsrs	r3, r3, r0
 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 463              		.loc 2 837 12 view .LVU110
 464 0016 9B09     		lsrs	r3, r3, #6
 465 0018 0320     		movs	r0, #3
 466 001a 1840     		ands	r0, r3
 467              	.LVL26:
 468              	.L22:
 837:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 469              		.loc 2 837 12 view .LVU111
 470              	.LBE65:
 471              	.LBE64:
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 472              		.loc 1 226 1 view .LVU112
 473              		@ sp needed
 474 001c 7047     		bx	lr
 475              	.LVL27:
 476              	.L25:
 477              	.LBB67:
 478              	.LBB66:
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 479              		.loc 2 833 5 is_stmt 1 view .LVU113
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 480              		.loc 2 833 34 is_stmt 0 view .LVU114
 481 001e 0F23     		movs	r3, #15
 482 0020 0340     		ands	r3, r0
 483 0022 083B     		subs	r3, r3, #8
 484 0024 9B08     		lsrs	r3, r3, #2
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 485              		.loc 2 833 33 view .LVU115
 486 0026 0633     		adds	r3, r3, #6
 487 0028 9B00     		lsls	r3, r3, #2
 488 002a 074A     		ldr	r2, .L26+4
 489 002c 9446     		mov	ip, r2
 490 002e 6344     		add	r3, r3, ip
 491 0030 5B68     		ldr	r3, [r3, #4]
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 492              		.loc 2 833 53 view .LVU116
 493 0032 0322     		movs	r2, #3
 494 0034 1040     		ands	r0, r2
 495              	.LVL28:
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 496              		.loc 2 833 53 view .LVU117
 497 0036 C000     		lsls	r0, r0, #3
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 498              		.loc 2 833 50 view .LVU118
 499 0038 C340     		lsrs	r3, r3, r0
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 500              		.loc 2 833 12 view .LVU119
 501 003a 9B09     		lsrs	r3, r3, #6
 502 003c 0320     		movs	r0, #3
 503 003e 1840     		ands	r0, r3
 504 0040 ECE7     		b	.L22
 505              	.L27:
 506 0042 C046     		.align	2
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 38


 507              	.L26:
 508 0044 00E100E0 		.word	-536813312
 509 0048 00ED00E0 		.word	-536810240
 510              	.LBE66:
 511              	.LBE67:
 512              		.cfi_endproc
 513              	.LFE39:
 515              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 516              		.align	1
 517              		.global	HAL_NVIC_SetPendingIRQ
 518              		.syntax unified
 519              		.code	16
 520              		.thumb_func
 521              		.fpu softvfp
 523              	HAL_NVIC_SetPendingIRQ:
 524              	.LVL29:
 525              	.LFB40:
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** { 
 526              		.loc 1 236 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Set interrupt pending */
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 531              		.loc 1 238 3 view .LVU121
 532              	.LBB68:
 533              	.LBI68:
 780:Drivers/CMSIS/Include/core_cm0plus.h **** {
 534              		.loc 2 780 22 view .LVU122
 535              	.LBB69:
 782:Drivers/CMSIS/Include/core_cm0plus.h **** }
 536              		.loc 2 782 3 view .LVU123
 782:Drivers/CMSIS/Include/core_cm0plus.h **** }
 537              		.loc 2 782 65 is_stmt 0 view .LVU124
 538 0000 1F23     		movs	r3, #31
 539 0002 1840     		ands	r0, r3
 540              	.LVL30:
 782:Drivers/CMSIS/Include/core_cm0plus.h **** }
 541              		.loc 2 782 20 view .LVU125
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 782:Drivers/CMSIS/Include/core_cm0plus.h **** }
 544              		.loc 2 782 18 view .LVU126
 545 0008 0249     		ldr	r1, .L29
 546 000a 8022     		movs	r2, #128
 547 000c 5200     		lsls	r2, r2, #1
 548 000e 8B50     		str	r3, [r1, r2]
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 39


 549              	.LVL31:
 782:Drivers/CMSIS/Include/core_cm0plus.h **** }
 550              		.loc 2 782 18 view .LVU127
 551              	.LBE69:
 552              	.LBE68:
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 553              		.loc 1 239 1 view .LVU128
 554              		@ sp needed
 555 0010 7047     		bx	lr
 556              	.L30:
 557 0012 C046     		.align	2
 558              	.L29:
 559 0014 00E100E0 		.word	-536813312
 560              		.cfi_endproc
 561              	.LFE40:
 563              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 564              		.align	1
 565              		.global	HAL_NVIC_GetPendingIRQ
 566              		.syntax unified
 567              		.code	16
 568              		.thumb_func
 569              		.fpu softvfp
 571              	HAL_NVIC_GetPendingIRQ:
 572              	.LVL32:
 573              	.LFB41:
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC 
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  IRQn External interrupt number .
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *          This parameter can be an enumerator of  IRQn_Type enumeration
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *          (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** { 
 574              		.loc 1 251 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 579              		.loc 1 253 3 view .LVU130
 580              	.LBB70:
 581              	.LBI70:
 769:Drivers/CMSIS/Include/core_cm0plus.h **** {
 582              		.loc 2 769 26 view .LVU131
 583              	.LBB71:
 771:Drivers/CMSIS/Include/core_cm0plus.h **** }
 584              		.loc 2 771 3 view .LVU132
 771:Drivers/CMSIS/Include/core_cm0plus.h **** }
 585              		.loc 2 771 33 is_stmt 0 view .LVU133
 586 0000 044A     		ldr	r2, .L32
 587 0002 8023     		movs	r3, #128
 588 0004 5B00     		lsls	r3, r3, #1
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 40


 589 0006 D358     		ldr	r3, [r2, r3]
 771:Drivers/CMSIS/Include/core_cm0plus.h **** }
 590              		.loc 2 771 75 view .LVU134
 591 0008 1F22     		movs	r2, #31
 592 000a 1040     		ands	r0, r2
 593              	.LVL33:
 771:Drivers/CMSIS/Include/core_cm0plus.h **** }
 594              		.loc 2 771 87 view .LVU135
 595 000c C340     		lsrs	r3, r3, r0
 771:Drivers/CMSIS/Include/core_cm0plus.h **** }
 596              		.loc 2 771 10 view .LVU136
 597 000e 0120     		movs	r0, #1
 598 0010 1840     		ands	r0, r3
 599              	.LVL34:
 771:Drivers/CMSIS/Include/core_cm0plus.h **** }
 600              		.loc 2 771 10 view .LVU137
 601              	.LBE71:
 602              	.LBE70:
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 603              		.loc 1 254 1 view .LVU138
 604              		@ sp needed
 605 0012 7047     		bx	lr
 606              	.L33:
 607              		.align	2
 608              	.L32:
 609 0014 00E100E0 		.word	-536813312
 610              		.cfi_endproc
 611              	.LFE41:
 613              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 614              		.align	1
 615              		.global	HAL_NVIC_ClearPendingIRQ
 616              		.syntax unified
 617              		.code	16
 618              		.thumb_func
 619              		.fpu softvfp
 621              	HAL_NVIC_ClearPendingIRQ:
 622              	.LVL35:
 623              	.LFB42:
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  IRQn External interrupt number .
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** { 
 624              		.loc 1 264 1 is_stmt 1 view -0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Clear pending interrupt */
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 629              		.loc 1 266 3 view .LVU140
 630              	.LBB72:
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 41


 631              	.LBI72:
 791:Drivers/CMSIS/Include/core_cm0plus.h **** {
 632              		.loc 2 791 22 view .LVU141
 633              	.LBB73:
 793:Drivers/CMSIS/Include/core_cm0plus.h **** }
 634              		.loc 2 793 3 view .LVU142
 793:Drivers/CMSIS/Include/core_cm0plus.h **** }
 635              		.loc 2 793 65 is_stmt 0 view .LVU143
 636 0000 1F23     		movs	r3, #31
 637 0002 1840     		ands	r0, r3
 638              	.LVL36:
 793:Drivers/CMSIS/Include/core_cm0plus.h **** }
 639              		.loc 2 793 20 view .LVU144
 640 0004 1E3B     		subs	r3, r3, #30
 641 0006 8340     		lsls	r3, r3, r0
 793:Drivers/CMSIS/Include/core_cm0plus.h **** }
 642              		.loc 2 793 18 view .LVU145
 643 0008 0249     		ldr	r1, .L35
 644 000a C022     		movs	r2, #192
 645 000c 5200     		lsls	r2, r2, #1
 646 000e 8B50     		str	r3, [r1, r2]
 647              	.LVL37:
 793:Drivers/CMSIS/Include/core_cm0plus.h **** }
 648              		.loc 2 793 18 view .LVU146
 649              	.LBE73:
 650              	.LBE72:
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 651              		.loc 1 267 1 view .LVU147
 652              		@ sp needed
 653 0010 7047     		bx	lr
 654              	.L36:
 655 0012 C046     		.align	2
 656              	.L35:
 657 0014 00E100E0 		.word	-536813312
 658              		.cfi_endproc
 659              	.LFE42:
 661              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 662              		.align	1
 663              		.global	HAL_SYSTICK_CLKSourceConfig
 664              		.syntax unified
 665              		.code	16
 666              		.thumb_func
 667              		.fpu softvfp
 669              	HAL_SYSTICK_CLKSourceConfig:
 670              	.LVL38:
 671              	.LFB43:
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  CLKSource specifies the SysTick clock source.
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 42


 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 672              		.loc 1 279 1 is_stmt 1 view -0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Check the parameters */
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 677              		.loc 1 281 3 view .LVU149
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 678              		.loc 1 282 3 view .LVU150
 679              		.loc 1 282 6 is_stmt 0 view .LVU151
 680 0000 0428     		cmp	r0, #4
 681 0002 05D0     		beq	.L40
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   {
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   }
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   else
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   {
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 682              		.loc 1 288 5 is_stmt 1 view .LVU152
 683              		.loc 1 288 19 is_stmt 0 view .LVU153
 684 0004 054A     		ldr	r2, .L41
 685 0006 1368     		ldr	r3, [r2]
 686 0008 0421     		movs	r1, #4
 687 000a 8B43     		bics	r3, r1
 688 000c 1360     		str	r3, [r2]
 689              	.L37:
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   }
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 690              		.loc 1 290 1 view .LVU154
 691              		@ sp needed
 692 000e 7047     		bx	lr
 693              	.L40:
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   }
 694              		.loc 1 284 5 is_stmt 1 view .LVU155
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   }
 695              		.loc 1 284 19 is_stmt 0 view .LVU156
 696 0010 024A     		ldr	r2, .L41
 697 0012 1368     		ldr	r3, [r2]
 698 0014 0421     		movs	r1, #4
 699 0016 0B43     		orrs	r3, r1
 700 0018 1360     		str	r3, [r2]
 701 001a F8E7     		b	.L37
 702              	.L42:
 703              		.align	2
 704              	.L41:
 705 001c 10E000E0 		.word	-536813552
 706              		.cfi_endproc
 707              	.LFE43:
 709              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 710              		.align	1
 711              		.weak	HAL_SYSTICK_Callback
 712              		.syntax unified
 713              		.code	16
 714              		.thumb_func
 715              		.fpu softvfp
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 43


 717              	HAL_SYSTICK_Callback:
 718              	.LFB45:
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 719              		.loc 1 306 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    */
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 724              		.loc 1 310 1 view .LVU158
 725              		@ sp needed
 726 0000 7047     		bx	lr
 727              		.cfi_endproc
 728              	.LFE45:
 730              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 731              		.align	1
 732              		.global	HAL_SYSTICK_IRQHandler
 733              		.syntax unified
 734              		.code	16
 735              		.thumb_func
 736              		.fpu softvfp
 738              	HAL_SYSTICK_IRQHandler:
 739              	.LFB44:
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 740              		.loc 1 297 1 view -0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744 0000 10B5     		push	{r4, lr}
 745              	.LCFI1:
 746              		.cfi_def_cfa_offset 8
 747              		.cfi_offset 4, -8
 748              		.cfi_offset 14, -4
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 749              		.loc 1 298 3 view .LVU160
 750 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 751              	.LVL39:
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 752              		.loc 1 299 1 is_stmt 0 view .LVU161
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 44


 753              		@ sp needed
 754 0006 10BD     		pop	{r4, pc}
 755              		.cfi_endproc
 756              	.LFE44:
 758              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 759              		.align	1
 760              		.global	HAL_MPU_Disable
 761              		.syntax unified
 762              		.code	16
 763              		.thumb_func
 764              		.fpu softvfp
 766              	HAL_MPU_Disable:
 767              	.LFB46:
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** #if (__MPU_PRESENT == 1U)
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Disable the MPU.
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 768              		.loc 1 318 1 is_stmt 1 view -0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /*Data Memory Barrier setup */
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   __DMB();
 773              		.loc 1 321 3 view .LVU163
 774              	.LBB74:
 775              	.LBI74:
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 776              		.loc 3 438 53 view .LVU164
 777              	.LBB75:
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 778              		.loc 3 440 3 view .LVU165
 779              		.syntax divided
 780              	@ 440 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 781 0000 BFF35F8F 		dmb 0xF
 782              	@ 0 "" 2
 783              		.thumb
 784              		.syntax unified
 785              	.LBE75:
 786              	.LBE74:
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Disable the MPU */
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   MPU->CTRL = 0;
 787              		.loc 1 323 3 view .LVU166
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 45


 788              		.loc 1 323 13 is_stmt 0 view .LVU167
 789 0004 014B     		ldr	r3, .L46
 790 0006 0022     		movs	r2, #0
 791 0008 5A60     		str	r2, [r3, #4]
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 792              		.loc 1 324 1 view .LVU168
 793              		@ sp needed
 794 000a 7047     		bx	lr
 795              	.L47:
 796              		.align	2
 797              	.L46:
 798 000c 90ED00E0 		.word	-536810096
 799              		.cfi_endproc
 800              	.LFE46:
 802              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 803              		.align	1
 804              		.global	HAL_MPU_Enable
 805              		.syntax unified
 806              		.code	16
 807              		.thumb_func
 808              		.fpu softvfp
 810              	HAL_MPU_Enable:
 811              	.LVL40:
 812              	.LFB47:
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Enable the MPU.
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  MPU_Control Specifies the control mode of the MPU during hard fault,
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 813              		.loc 1 339 1 is_stmt 1 view -0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              		@ link register save eliminated.
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Enable the MPU */
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****    MPU->CTRL   = MPU_Control | MPU_CTRL_ENABLE_Msk;
 818              		.loc 1 341 4 view .LVU170
 819              		.loc 1 341 30 is_stmt 0 view .LVU171
 820 0000 0123     		movs	r3, #1
 821 0002 1843     		orrs	r0, r3
 822              	.LVL41:
 823              		.loc 1 341 16 view .LVU172
 824 0004 034B     		ldr	r3, .L49
 825 0006 5860     		str	r0, [r3, #4]
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Data Synchronization Barrier setup */
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   __DSB();
 826              		.loc 1 343 3 is_stmt 1 view .LVU173
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 46


 827              	.LBB76:
 828              	.LBI76:
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 829              		.loc 3 427 53 view .LVU174
 830              	.LBB77:
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 831              		.loc 3 429 3 view .LVU175
 832              		.syntax divided
 833              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 834 0008 BFF34F8F 		dsb 0xF
 835              	@ 0 "" 2
 836              		.thumb
 837              		.syntax unified
 838              	.LBE77:
 839              	.LBE76:
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Instruction Synchronization Barrier setup */
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   __ISB();
 840              		.loc 1 345 3 view .LVU176
 841              	.LBB78:
 842              	.LBI78:
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 843              		.loc 3 416 53 view .LVU177
 844              	.LBB79:
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 845              		.loc 3 418 3 view .LVU178
 846              		.syntax divided
 847              	@ 418 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 848 000c BFF36F8F 		isb 0xF
 849              	@ 0 "" 2
 850              		.thumb
 851              		.syntax unified
 852              	.LBE79:
 853              	.LBE78:
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 854              		.loc 1 347 1 is_stmt 0 view .LVU179
 855              		@ sp needed
 856 0010 7047     		bx	lr
 857              	.L50:
 858 0012 C046     		.align	2
 859              	.L49:
 860 0014 90ED00E0 		.word	-536810096
 861              		.cfi_endproc
 862              	.LFE47:
 864              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 865              		.align	1
 866              		.global	HAL_MPU_ConfigRegion
 867              		.syntax unified
 868              		.code	16
 869              		.thumb_func
 870              		.fpu softvfp
 872              	HAL_MPU_ConfigRegion:
 873              	.LVL42:
 874              	.LFB48:
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** /**
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 47


 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @param  MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   *                the initialization and configuration information.
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   * @retval None
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   */
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** {
 875              		.loc 1 356 1 is_stmt 1 view -0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 0, uses_anonymous_args = 0
 879              		@ link register save eliminated.
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Check the parameters */
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 880              		.loc 1 358 3 view .LVU181
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 881              		.loc 1 359 3 view .LVU182
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   /* Set the Region number */
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 882              		.loc 1 362 3 view .LVU183
 883              		.loc 1 362 22 is_stmt 0 view .LVU184
 884 0000 4279     		ldrb	r2, [r0, #5]
 885              		.loc 1 362 12 view .LVU185
 886 0002 134B     		ldr	r3, .L55
 887 0004 9A60     		str	r2, [r3, #8]
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   if ((MPU_Init->Enable) == MPU_REGION_ENABLE)
 888              		.loc 1 364 3 is_stmt 1 view .LVU186
 889              		.loc 1 364 16 is_stmt 0 view .LVU187
 890 0006 0379     		ldrb	r3, [r0, #4]
 891              		.loc 1 364 6 view .LVU188
 892 0008 012B     		cmp	r3, #1
 893 000a 04D0     		beq	.L54
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   {
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     /* Check the parameters */
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     /* Set the base adsress and set the 4 LSB to 0 */
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     MPU->RBAR = (MPU_Init->BaseAddress) & 0xfffffff0U;
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     /* Fill the field RASR */
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   }
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   else
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 48


 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   {
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     MPU->RBAR = 0x00U;
 894              		.loc 1 390 5 is_stmt 1 view .LVU189
 895              		.loc 1 390 15 is_stmt 0 view .LVU190
 896 000c 104B     		ldr	r3, .L55
 897 000e 0022     		movs	r2, #0
 898 0010 DA60     		str	r2, [r3, #12]
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     MPU->RASR = 0x00U;
 899              		.loc 1 391 5 is_stmt 1 view .LVU191
 900              		.loc 1 391 15 is_stmt 0 view .LVU192
 901 0012 1A61     		str	r2, [r3, #16]
 902              	.L51:
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   }
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** }
 903              		.loc 1 393 1 view .LVU193
 904              		@ sp needed
 905 0014 7047     		bx	lr
 906              	.L54:
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 907              		.loc 1 367 5 is_stmt 1 view .LVU194
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 908              		.loc 1 368 5 view .LVU195
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 909              		.loc 1 369 5 view .LVU196
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 910              		.loc 1 370 5 view .LVU197
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 911              		.loc 1 371 5 view .LVU198
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 912              		.loc 1 372 5 view .LVU199
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 913              		.loc 1 373 5 view .LVU200
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 914              		.loc 1 376 5 view .LVU201
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 915              		.loc 1 376 41 is_stmt 0 view .LVU202
 916 0016 0E33     		adds	r3, r3, #14
 917 0018 0268     		ldr	r2, [r0]
 918 001a 9A43     		bics	r2, r3
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c **** 
 919              		.loc 1 376 15 view .LVU203
 920 001c 0C49     		ldr	r1, .L55
 921 001e CA60     		str	r2, [r1, #12]
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 922              		.loc 1 379 5 is_stmt 1 view .LVU204
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 923              		.loc 1 379 36 is_stmt 0 view .LVU205
 924 0020 837A     		ldrb	r3, [r0, #10]
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 925              		.loc 1 379 57 view .LVU206
 926 0022 1B07     		lsls	r3, r3, #28
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 927              		.loc 1 380 36 view .LVU207
 928 0024 427A     		ldrb	r2, [r0, #9]
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 929              		.loc 1 380 57 view .LVU208
 930 0026 1206     		lsls	r2, r2, #24
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 49


 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 931              		.loc 1 379 79 view .LVU209
 932 0028 1343     		orrs	r3, r2
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 933              		.loc 1 381 36 view .LVU210
 934 002a C27A     		ldrb	r2, [r0, #11]
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 935              		.loc 1 381 57 view .LVU211
 936 002c 9204     		lsls	r2, r2, #18
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 937              		.loc 1 380 79 view .LVU212
 938 002e 1343     		orrs	r3, r2
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 939              		.loc 1 382 36 view .LVU213
 940 0030 027B     		ldrb	r2, [r0, #12]
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 941              		.loc 1 382 57 view .LVU214
 942 0032 5204     		lsls	r2, r2, #17
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 943              		.loc 1 381 79 view .LVU215
 944 0034 1343     		orrs	r3, r2
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 945              		.loc 1 383 36 view .LVU216
 946 0036 427B     		ldrb	r2, [r0, #13]
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 947              		.loc 1 383 57 view .LVU217
 948 0038 1204     		lsls	r2, r2, #16
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 949              		.loc 1 382 79 view .LVU218
 950 003a 1343     		orrs	r3, r2
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 951              		.loc 1 384 36 view .LVU219
 952 003c C279     		ldrb	r2, [r0, #7]
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 953              		.loc 1 384 57 view .LVU220
 954 003e 1202     		lsls	r2, r2, #8
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 955              		.loc 1 383 79 view .LVU221
 956 0040 1343     		orrs	r3, r2
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 957              		.loc 1 385 36 view .LVU222
 958 0042 8279     		ldrb	r2, [r0, #6]
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 959              		.loc 1 385 57 view .LVU223
 960 0044 5200     		lsls	r2, r2, #1
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 961              		.loc 1 384 79 view .LVU224
 962 0046 1343     		orrs	r3, r2
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****   }
 963              		.loc 1 386 36 view .LVU225
 964 0048 0279     		ldrb	r2, [r0, #4]
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 965              		.loc 1 385 79 view .LVU226
 966 004a 1343     		orrs	r3, r2
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 967              		.loc 1 379 15 view .LVU227
 968 004c 0B61     		str	r3, [r1, #16]
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 50


 969 004e E1E7     		b	.L51
 970              	.L56:
 971              		.align	2
 972              	.L55:
 973 0050 90ED00E0 		.word	-536810096
 974              		.cfi_endproc
 975              	.LFE48:
 977              		.text
 978              	.Letext0:
 979              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l052xx.h"
 980              		.file 5 "/usr/local/Cellar/arm-gcc-bin/9-2019-q4-major/arm-none-eabi/include/machine/_default_type
 981              		.file 6 "/usr/local/Cellar/arm-gcc-bin/9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 982              		.file 7 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 983              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 984              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal_cortex.c
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:16     .text.HAL_NVIC_SetPriority:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:24     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:139    .text.HAL_NVIC_SetPriority:0000000000000058 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:147    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:154    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:189    .text.HAL_NVIC_EnableIRQ:0000000000000010 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:194    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:201    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:237    .text.HAL_NVIC_DisableIRQ:0000000000000010 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:242    .text.HAL_NVIC_SystemReset:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:249    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:314    .text.HAL_NVIC_SystemReset:0000000000000014 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:324    .text.HAL_SYSTICK_Config:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:331    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:417    .text.HAL_SYSTICK_Config:0000000000000030 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:423    .text.HAL_NVIC_GetPriority:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:430    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:508    .text.HAL_NVIC_GetPriority:0000000000000044 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:516    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:523    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:559    .text.HAL_NVIC_SetPendingIRQ:0000000000000014 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:564    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:571    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:609    .text.HAL_NVIC_GetPendingIRQ:0000000000000014 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:614    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:621    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:657    .text.HAL_NVIC_ClearPendingIRQ:0000000000000014 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:662    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:669    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:705    .text.HAL_SYSTICK_CLKSourceConfig:000000000000001c $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:710    .text.HAL_SYSTICK_Callback:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:717    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:731    .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:738    .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:759    .text.HAL_MPU_Disable:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:766    .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:798    .text.HAL_MPU_Disable:000000000000000c $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:803    .text.HAL_MPU_Enable:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:810    .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:860    .text.HAL_MPU_Enable:0000000000000014 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:865    .text.HAL_MPU_ConfigRegion:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:872    .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//ccXd6HqE.s:973    .text.HAL_MPU_ConfigRegion:0000000000000050 $d

NO UNDEFINED SYMBOLS
