ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32l0xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	SystemInit:
  25              	.LFB34:
  26              		.file 1 "Src/system_stm32l0xx.c"
   1:Src/system_stm32l0xx.c **** /**
   2:Src/system_stm32l0xx.c ****   ******************************************************************************
   3:Src/system_stm32l0xx.c ****   * @file    system_stm32l0xx.c
   4:Src/system_stm32l0xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32l0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File.
   6:Src/system_stm32l0xx.c ****   *
   7:Src/system_stm32l0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32l0xx.c ****   *   user application:
   9:Src/system_stm32l0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32l0xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32l0xx.c ****   *                      the "startup_stm32l0xx.s" file.
  12:Src/system_stm32l0xx.c ****   *
  13:Src/system_stm32l0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32l0xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32l0xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32l0xx.c ****   *
  17:Src/system_stm32l0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32l0xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32l0xx.c ****   *                                 during program execution.
  20:Src/system_stm32l0xx.c ****   *
  21:Src/system_stm32l0xx.c ****   *
  22:Src/system_stm32l0xx.c ****   ******************************************************************************
  23:Src/system_stm32l0xx.c ****   * @attention
  24:Src/system_stm32l0xx.c ****   *
  25:Src/system_stm32l0xx.c ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  26:Src/system_stm32l0xx.c ****   * All rights reserved.</center></h2>
  27:Src/system_stm32l0xx.c ****   *
  28:Src/system_stm32l0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Src/system_stm32l0xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Src/system_stm32l0xx.c ****   * License. You may obtain a copy of the License at:
  31:Src/system_stm32l0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Src/system_stm32l0xx.c ****   *
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 2


  33:Src/system_stm32l0xx.c ****   ******************************************************************************
  34:Src/system_stm32l0xx.c ****   */
  35:Src/system_stm32l0xx.c **** 
  36:Src/system_stm32l0xx.c **** /** @addtogroup CMSIS
  37:Src/system_stm32l0xx.c ****   * @{
  38:Src/system_stm32l0xx.c ****   */
  39:Src/system_stm32l0xx.c **** 
  40:Src/system_stm32l0xx.c **** /** @addtogroup stm32l0xx_system
  41:Src/system_stm32l0xx.c ****   * @{
  42:Src/system_stm32l0xx.c ****   */
  43:Src/system_stm32l0xx.c **** 
  44:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Includes
  45:Src/system_stm32l0xx.c ****   * @{
  46:Src/system_stm32l0xx.c ****   */
  47:Src/system_stm32l0xx.c **** 
  48:Src/system_stm32l0xx.c **** #include "stm32l0xx.h"
  49:Src/system_stm32l0xx.c **** 
  50:Src/system_stm32l0xx.c **** #if !defined  (HSE_VALUE)
  51:Src/system_stm32l0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000U) /*!< Value of the External oscillator in Hz */
  52:Src/system_stm32l0xx.c **** #endif /* HSE_VALUE */
  53:Src/system_stm32l0xx.c **** 
  54:Src/system_stm32l0xx.c **** #if !defined  (MSI_VALUE)
  55:Src/system_stm32l0xx.c ****   #define MSI_VALUE    ((uint32_t)2097152U) /*!< Value of the Internal oscillator in Hz*/
  56:Src/system_stm32l0xx.c **** #endif /* MSI_VALUE */
  57:Src/system_stm32l0xx.c **** 
  58:Src/system_stm32l0xx.c **** #if !defined  (HSI_VALUE)
  59:Src/system_stm32l0xx.c ****   #define HSI_VALUE    ((uint32_t)16000000U) /*!< Value of the Internal oscillator in Hz*/
  60:Src/system_stm32l0xx.c **** #endif /* HSI_VALUE */
  61:Src/system_stm32l0xx.c **** 
  62:Src/system_stm32l0xx.c **** 
  63:Src/system_stm32l0xx.c **** /**
  64:Src/system_stm32l0xx.c ****   * @}
  65:Src/system_stm32l0xx.c ****   */
  66:Src/system_stm32l0xx.c **** 
  67:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_TypesDefinitions
  68:Src/system_stm32l0xx.c ****   * @{
  69:Src/system_stm32l0xx.c ****   */
  70:Src/system_stm32l0xx.c **** 
  71:Src/system_stm32l0xx.c **** /**
  72:Src/system_stm32l0xx.c ****   * @}
  73:Src/system_stm32l0xx.c ****   */
  74:Src/system_stm32l0xx.c **** 
  75:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Defines
  76:Src/system_stm32l0xx.c ****   * @{
  77:Src/system_stm32l0xx.c ****   */
  78:Src/system_stm32l0xx.c **** /************************* Miscellaneous Configuration ************************/
  79:Src/system_stm32l0xx.c **** 
  80:Src/system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  81:Src/system_stm32l0xx.c ****      Internal SRAM. */
  82:Src/system_stm32l0xx.c **** /* #define VECT_TAB_SRAM */
  83:Src/system_stm32l0xx.c **** #define VECT_TAB_OFFSET  0x00U /*!< Vector Table base offset field.
  84:Src/system_stm32l0xx.c ****                                    This value must be a multiple of 0x100. */
  85:Src/system_stm32l0xx.c **** /******************************************************************************/
  86:Src/system_stm32l0xx.c **** /**
  87:Src/system_stm32l0xx.c ****   * @}
  88:Src/system_stm32l0xx.c ****   */
  89:Src/system_stm32l0xx.c **** 
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 3


  90:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Macros
  91:Src/system_stm32l0xx.c ****   * @{
  92:Src/system_stm32l0xx.c ****   */
  93:Src/system_stm32l0xx.c **** 
  94:Src/system_stm32l0xx.c **** /**
  95:Src/system_stm32l0xx.c ****   * @}
  96:Src/system_stm32l0xx.c ****   */
  97:Src/system_stm32l0xx.c **** 
  98:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Variables
  99:Src/system_stm32l0xx.c ****   * @{
 100:Src/system_stm32l0xx.c ****   */
 101:Src/system_stm32l0xx.c ****   /* This variable is updated in three ways:
 102:Src/system_stm32l0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 103:Src/system_stm32l0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 104:Src/system_stm32l0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 105:Src/system_stm32l0xx.c ****          Note: If you use this function to configure the system clock; then there
 106:Src/system_stm32l0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 107:Src/system_stm32l0xx.c ****                variable is updated automatically.
 108:Src/system_stm32l0xx.c ****   */
 109:Src/system_stm32l0xx.c ****   uint32_t SystemCoreClock = 2097152U; /* 32.768 kHz * 2^6 */
 110:Src/system_stm32l0xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 111:Src/system_stm32l0xx.c ****   const uint8_t APBPrescTable[8] = {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 112:Src/system_stm32l0xx.c ****   const uint8_t PLLMulTable[9] = {3U, 4U, 6U, 8U, 12U, 16U, 24U, 32U, 48U};
 113:Src/system_stm32l0xx.c **** 
 114:Src/system_stm32l0xx.c **** /**
 115:Src/system_stm32l0xx.c ****   * @}
 116:Src/system_stm32l0xx.c ****   */
 117:Src/system_stm32l0xx.c **** 
 118:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_FunctionPrototypes
 119:Src/system_stm32l0xx.c ****   * @{
 120:Src/system_stm32l0xx.c ****   */
 121:Src/system_stm32l0xx.c **** 
 122:Src/system_stm32l0xx.c **** /**
 123:Src/system_stm32l0xx.c ****   * @}
 124:Src/system_stm32l0xx.c ****   */
 125:Src/system_stm32l0xx.c **** 
 126:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Functions
 127:Src/system_stm32l0xx.c ****   * @{
 128:Src/system_stm32l0xx.c ****   */
 129:Src/system_stm32l0xx.c **** 
 130:Src/system_stm32l0xx.c **** /**
 131:Src/system_stm32l0xx.c ****   * @brief  Setup the microcontroller system.
 132:Src/system_stm32l0xx.c ****   * @param  None
 133:Src/system_stm32l0xx.c ****   * @retval None
 134:Src/system_stm32l0xx.c ****   */
 135:Src/system_stm32l0xx.c **** void SystemInit (void)
 136:Src/system_stm32l0xx.c **** {
  27              		.loc 1 136 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 137:Src/system_stm32l0xx.c **** /*!< Set MSION bit */
 138:Src/system_stm32l0xx.c ****   RCC->CR |= (uint32_t)0x00000100U;
  32              		.loc 1 138 3 view .LVU1
  33              		.loc 1 138 11 is_stmt 0 view .LVU2
  34 0000 104B     		ldr	r3, .L2
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 4


  35 0002 1968     		ldr	r1, [r3]
  36 0004 8022     		movs	r2, #128
  37 0006 5200     		lsls	r2, r2, #1
  38 0008 0A43     		orrs	r2, r1
  39 000a 1A60     		str	r2, [r3]
 139:Src/system_stm32l0xx.c **** 
 140:Src/system_stm32l0xx.c ****   /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
 141:Src/system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t) 0x88FF400CU;
  40              		.loc 1 141 3 is_stmt 1 view .LVU3
  41              		.loc 1 141 13 is_stmt 0 view .LVU4
  42 000c DA68     		ldr	r2, [r3, #12]
  43 000e 0E49     		ldr	r1, .L2+4
  44 0010 0A40     		ands	r2, r1
  45 0012 DA60     		str	r2, [r3, #12]
 142:Src/system_stm32l0xx.c **** 
 143:Src/system_stm32l0xx.c ****   /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
 144:Src/system_stm32l0xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFF6U;
  46              		.loc 1 144 3 is_stmt 1 view .LVU5
  47              		.loc 1 144 11 is_stmt 0 view .LVU6
  48 0014 1A68     		ldr	r2, [r3]
  49 0016 0D49     		ldr	r1, .L2+8
  50 0018 0A40     		ands	r2, r1
  51 001a 1A60     		str	r2, [r3]
 145:Src/system_stm32l0xx.c **** 
 146:Src/system_stm32l0xx.c ****   /*!< Reset HSI48ON  bit */
 147:Src/system_stm32l0xx.c ****   RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
  52              		.loc 1 147 3 is_stmt 1 view .LVU7
  53              		.loc 1 147 14 is_stmt 0 view .LVU8
  54 001c 9A68     		ldr	r2, [r3, #8]
  55 001e 0121     		movs	r1, #1
  56 0020 8A43     		bics	r2, r1
  57 0022 9A60     		str	r2, [r3, #8]
 148:Src/system_stm32l0xx.c **** 
 149:Src/system_stm32l0xx.c ****   /*!< Reset HSEBYP bit */
 150:Src/system_stm32l0xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFFU;
  58              		.loc 1 150 3 is_stmt 1 view .LVU9
  59              		.loc 1 150 11 is_stmt 0 view .LVU10
  60 0024 1A68     		ldr	r2, [r3]
  61 0026 0A49     		ldr	r1, .L2+12
  62 0028 0A40     		ands	r2, r1
  63 002a 1A60     		str	r2, [r3]
 151:Src/system_stm32l0xx.c **** 
 152:Src/system_stm32l0xx.c ****   /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
 153:Src/system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t)0xFF02FFFFU;
  64              		.loc 1 153 3 is_stmt 1 view .LVU11
  65              		.loc 1 153 13 is_stmt 0 view .LVU12
  66 002c DA68     		ldr	r2, [r3, #12]
  67 002e 0949     		ldr	r1, .L2+16
  68 0030 0A40     		ands	r2, r1
  69 0032 DA60     		str	r2, [r3, #12]
 154:Src/system_stm32l0xx.c **** 
 155:Src/system_stm32l0xx.c ****   /*!< Disable all interrupts */
 156:Src/system_stm32l0xx.c ****   RCC->CIER = 0x00000000U;
  70              		.loc 1 156 3 is_stmt 1 view .LVU13
  71              		.loc 1 156 13 is_stmt 0 view .LVU14
  72 0034 0022     		movs	r2, #0
  73 0036 1A61     		str	r2, [r3, #16]
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 5


 157:Src/system_stm32l0xx.c **** 
 158:Src/system_stm32l0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 159:Src/system_stm32l0xx.c **** #ifdef VECT_TAB_SRAM
 160:Src/system_stm32l0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 161:Src/system_stm32l0xx.c **** #else
 162:Src/system_stm32l0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  74              		.loc 1 162 3 is_stmt 1 view .LVU15
  75              		.loc 1 162 13 is_stmt 0 view .LVU16
  76 0038 074B     		ldr	r3, .L2+20
  77 003a 8022     		movs	r2, #128
  78 003c 1205     		lsls	r2, r2, #20
  79 003e 9A60     		str	r2, [r3, #8]
 163:Src/system_stm32l0xx.c **** #endif
 164:Src/system_stm32l0xx.c **** }
  80              		.loc 1 164 1 view .LVU17
  81              		@ sp needed
  82 0040 7047     		bx	lr
  83              	.L3:
  84 0042 C046     		.align	2
  85              	.L2:
  86 0044 00100240 		.word	1073876992
  87 0048 0C40FF88 		.word	-1996537844
  88 004c F6FFF6FE 		.word	-17367050
  89 0050 FFFFFBFF 		.word	-262145
  90 0054 FFFF02FF 		.word	-16580609
  91 0058 00ED00E0 		.word	-536810240
  92              		.cfi_endproc
  93              	.LFE34:
  95              		.global	__aeabi_uidiv
  96              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  97              		.align	1
  98              		.global	SystemCoreClockUpdate
  99              		.syntax unified
 100              		.code	16
 101              		.thumb_func
 102              		.fpu softvfp
 104              	SystemCoreClockUpdate:
 105              	.LFB35:
 165:Src/system_stm32l0xx.c **** 
 166:Src/system_stm32l0xx.c **** /**
 167:Src/system_stm32l0xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 168:Src/system_stm32l0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 169:Src/system_stm32l0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 170:Src/system_stm32l0xx.c ****   *         other parameters.
 171:Src/system_stm32l0xx.c ****   *
 172:Src/system_stm32l0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 173:Src/system_stm32l0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 174:Src/system_stm32l0xx.c ****   *         based on this variable will be incorrect.
 175:Src/system_stm32l0xx.c ****   *
 176:Src/system_stm32l0xx.c ****   * @note   - The system frequency computed by this function is not the real
 177:Src/system_stm32l0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 178:Src/system_stm32l0xx.c ****   *           constant and the selected clock source:
 179:Src/system_stm32l0xx.c ****   *
 180:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI
 181:Src/system_stm32l0xx.c ****   *             value as defined by the MSI range.
 182:Src/system_stm32l0xx.c ****   *
 183:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 6


 184:Src/system_stm32l0xx.c ****   *
 185:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 186:Src/system_stm32l0xx.c ****   *
 187:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 188:Src/system_stm32l0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 189:Src/system_stm32l0xx.c ****   *
 190:Src/system_stm32l0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 191:Src/system_stm32l0xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 192:Src/system_stm32l0xx.c ****   *             in voltage and temperature.
 193:Src/system_stm32l0xx.c ****   *
 194:Src/system_stm32l0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 195:Src/system_stm32l0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 196:Src/system_stm32l0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 197:Src/system_stm32l0xx.c ****   *              have wrong result.
 198:Src/system_stm32l0xx.c ****   *
 199:Src/system_stm32l0xx.c ****   *         - The result of this function could be not correct when using fractional
 200:Src/system_stm32l0xx.c ****   *           value for HSE crystal.
 201:Src/system_stm32l0xx.c ****   * @param  None
 202:Src/system_stm32l0xx.c ****   * @retval None
 203:Src/system_stm32l0xx.c ****   */
 204:Src/system_stm32l0xx.c **** void SystemCoreClockUpdate (void)
 205:Src/system_stm32l0xx.c **** {
 106              		.loc 1 205 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 10B5     		push	{r4, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 14, -4
 206:Src/system_stm32l0xx.c ****   uint32_t tmp = 0U, pllmul = 0U, plldiv = 0U, pllsource = 0U, msirange = 0U;
 115              		.loc 1 206 3 view .LVU19
 116              	.LVL0:
 207:Src/system_stm32l0xx.c **** 
 208:Src/system_stm32l0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 209:Src/system_stm32l0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 117              		.loc 1 209 3 view .LVU20
 118              		.loc 1 209 12 is_stmt 0 view .LVU21
 119 0002 344B     		ldr	r3, .L13
 120 0004 DA68     		ldr	r2, [r3, #12]
 121              		.loc 1 209 7 view .LVU22
 122 0006 0C23     		movs	r3, #12
 123 0008 1340     		ands	r3, r2
 124              	.LVL1:
 210:Src/system_stm32l0xx.c **** 
 211:Src/system_stm32l0xx.c ****   switch (tmp)
 125              		.loc 1 211 3 is_stmt 1 view .LVU23
 126 000a 042B     		cmp	r3, #4
 127 000c 3AD0     		beq	.L5
 128 000e 082B     		cmp	r3, #8
 129 0010 44D0     		beq	.L6
 130 0012 002B     		cmp	r3, #0
 131 0014 1ED0     		beq	.L12
 212:Src/system_stm32l0xx.c ****   {
 213:Src/system_stm32l0xx.c ****     case 0x00U:  /* MSI used as system clock */
 214:Src/system_stm32l0xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> RCC_ICSCR_MSIRANGE_Pos;
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 7


 215:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 216:Src/system_stm32l0xx.c ****       break;
 217:Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 218:Src/system_stm32l0xx.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 219:Src/system_stm32l0xx.c ****       {
 220:Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE / 4U;
 221:Src/system_stm32l0xx.c ****       }
 222:Src/system_stm32l0xx.c ****       else
 223:Src/system_stm32l0xx.c ****       {
 224:Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE;
 225:Src/system_stm32l0xx.c ****       }
 226:Src/system_stm32l0xx.c ****       break;
 227:Src/system_stm32l0xx.c ****     case 0x08U:  /* HSE used as system clock */
 228:Src/system_stm32l0xx.c ****       SystemCoreClock = HSE_VALUE;
 229:Src/system_stm32l0xx.c ****       break;
 230:Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 231:Src/system_stm32l0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 232:Src/system_stm32l0xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 132              		.loc 1 232 7 view .LVU24
 133              		.loc 1 232 19 is_stmt 0 view .LVU25
 134 0016 2F4B     		ldr	r3, .L13
 135              	.LVL2:
 136              		.loc 1 232 19 view .LVU26
 137 0018 D868     		ldr	r0, [r3, #12]
 138              	.LVL3:
 233:Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 139              		.loc 1 233 7 is_stmt 1 view .LVU27
 140              		.loc 1 233 19 is_stmt 0 view .LVU28
 141 001a D968     		ldr	r1, [r3, #12]
 142              	.LVL4:
 234:Src/system_stm32l0xx.c ****       pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
 143              		.loc 1 234 7 is_stmt 1 view .LVU29
 144              		.loc 1 234 36 is_stmt 0 view .LVU30
 145 001c 800C     		lsrs	r0, r0, #18
 146              	.LVL5:
 147              		.loc 1 234 36 view .LVU31
 148 001e 0F22     		movs	r2, #15
 149              	.LVL6:
 150              		.loc 1 234 36 view .LVU32
 151 0020 0240     		ands	r2, r0
 152              		.loc 1 234 27 view .LVU33
 153 0022 2D48     		ldr	r0, .L13+4
 154 0024 845C     		ldrb	r4, [r0, r2]
 155              	.LVL7:
 235:Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 156              		.loc 1 235 7 is_stmt 1 view .LVU34
 157              		.loc 1 235 24 is_stmt 0 view .LVU35
 158 0026 8A0D     		lsrs	r2, r1, #22
 159 0028 0321     		movs	r1, #3
 160              	.LVL8:
 161              		.loc 1 235 24 view .LVU36
 162 002a 1140     		ands	r1, r2
 163              		.loc 1 235 14 view .LVU37
 164 002c 0131     		adds	r1, r1, #1
 165              	.LVL9:
 236:Src/system_stm32l0xx.c **** 
 237:Src/system_stm32l0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 8


 166              		.loc 1 237 7 is_stmt 1 view .LVU38
 167              		.loc 1 237 22 is_stmt 0 view .LVU39
 168 002e DB68     		ldr	r3, [r3, #12]
 169              	.LVL10:
 238:Src/system_stm32l0xx.c **** 
 239:Src/system_stm32l0xx.c ****       if (pllsource == 0x00U)
 170              		.loc 1 239 7 is_stmt 1 view .LVU40
 171              		.loc 1 239 10 is_stmt 0 view .LVU41
 172 0030 DB03     		lsls	r3, r3, #15
 173 0032 43D4     		bmi	.L10
 174              	.LVL11:
 240:Src/system_stm32l0xx.c ****       {
 241:Src/system_stm32l0xx.c ****         /* HSI oscillator clock selected as PLL clock entry */
 242:Src/system_stm32l0xx.c ****         if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 175              		.loc 1 242 9 is_stmt 1 view .LVU42
 176              		.loc 1 242 17 is_stmt 0 view .LVU43
 177 0034 274B     		ldr	r3, .L13
 178 0036 1B68     		ldr	r3, [r3]
 179              		.loc 1 242 12 view .LVU44
 180 0038 DB06     		lsls	r3, r3, #27
 181 003a 33D5     		bpl	.L11
 243:Src/system_stm32l0xx.c ****         {
 244:Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE / 4U) * pllmul) / plldiv);
 182              		.loc 1 244 11 is_stmt 1 view .LVU45
 183              		.loc 1 244 48 is_stmt 0 view .LVU46
 184 003c 6301     		lsls	r3, r4, #5
 185 003e 1B1B     		subs	r3, r3, r4
 186 0040 9801     		lsls	r0, r3, #6
 187 0042 C01A     		subs	r0, r0, r3
 188 0044 C000     		lsls	r0, r0, #3
 189 0046 0019     		adds	r0, r0, r4
 190 0048 0002     		lsls	r0, r0, #8
 191              		.loc 1 244 58 view .LVU47
 192 004a FFF7FEFF 		bl	__aeabi_uidiv
 193              	.LVL12:
 194              		.loc 1 244 27 view .LVU48
 195 004e 234B     		ldr	r3, .L13+8
 196 0050 1860     		str	r0, [r3]
 197 0052 0BE0     		b	.L8
 198              	.LVL13:
 199              	.L12:
 214:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 200              		.loc 1 214 7 is_stmt 1 view .LVU49
 214:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 201              		.loc 1 214 22 is_stmt 0 view .LVU50
 202 0054 1F4B     		ldr	r3, .L13
 203              	.LVL14:
 214:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 204              		.loc 1 214 22 view .LVU51
 205 0056 5A68     		ldr	r2, [r3, #4]
 206              	.LVL15:
 214:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 207              		.loc 1 214 52 view .LVU52
 208 0058 520B     		lsrs	r2, r2, #13
 214:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 209              		.loc 1 214 16 view .LVU53
 210 005a 0723     		movs	r3, #7
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 9


 211 005c 1340     		ands	r3, r2
 212              	.LVL16:
 215:Src/system_stm32l0xx.c ****       break;
 213              		.loc 1 215 7 is_stmt 1 view .LVU54
 215:Src/system_stm32l0xx.c ****       break;
 214              		.loc 1 215 52 is_stmt 0 view .LVU55
 215 005e 0133     		adds	r3, r3, #1
 216              	.LVL17:
 215:Src/system_stm32l0xx.c ****       break;
 217              		.loc 1 215 33 view .LVU56
 218 0060 8022     		movs	r2, #128
 219 0062 1202     		lsls	r2, r2, #8
 220 0064 9A40     		lsls	r2, r2, r3
 221 0066 1300     		movs	r3, r2
 222              	.LVL18:
 215:Src/system_stm32l0xx.c ****       break;
 223              		.loc 1 215 23 view .LVU57
 224 0068 1C4A     		ldr	r2, .L13+8
 225 006a 1360     		str	r3, [r2]
 216:Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 226              		.loc 1 216 7 is_stmt 1 view .LVU58
 227              	.LVL19:
 228              	.L8:
 245:Src/system_stm32l0xx.c ****         }
 246:Src/system_stm32l0xx.c ****         else
 247:Src/system_stm32l0xx.c ****         {
 248:Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 249:Src/system_stm32l0xx.c ****         }
 250:Src/system_stm32l0xx.c ****       }
 251:Src/system_stm32l0xx.c ****       else
 252:Src/system_stm32l0xx.c ****       {
 253:Src/system_stm32l0xx.c ****         /* HSE selected as PLL clock entry */
 254:Src/system_stm32l0xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 255:Src/system_stm32l0xx.c ****       }
 256:Src/system_stm32l0xx.c ****       break;
 257:Src/system_stm32l0xx.c ****   }
 258:Src/system_stm32l0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 259:Src/system_stm32l0xx.c ****   /* Get HCLK prescaler */
 260:Src/system_stm32l0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 229              		.loc 1 260 3 view .LVU59
 230              		.loc 1 260 28 is_stmt 0 view .LVU60
 231 006c 194B     		ldr	r3, .L13
 232 006e DA68     		ldr	r2, [r3, #12]
 233              		.loc 1 260 52 view .LVU61
 234 0070 1209     		lsrs	r2, r2, #4
 235 0072 0F23     		movs	r3, #15
 236 0074 1340     		ands	r3, r2
 237              		.loc 1 260 22 view .LVU62
 238 0076 1A4A     		ldr	r2, .L13+12
 239 0078 D35C     		ldrb	r3, [r2, r3]
 240              	.LVL20:
 261:Src/system_stm32l0xx.c ****   /* HCLK clock frequency */
 262:Src/system_stm32l0xx.c ****   SystemCoreClock >>= tmp;
 241              		.loc 1 262 3 is_stmt 1 view .LVU63
 242              		.loc 1 262 19 is_stmt 0 view .LVU64
 243 007a 184A     		ldr	r2, .L13+8
 244 007c 1168     		ldr	r1, [r2]
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 10


 245 007e D940     		lsrs	r1, r1, r3
 246 0080 1160     		str	r1, [r2]
 263:Src/system_stm32l0xx.c **** }
 247              		.loc 1 263 1 view .LVU65
 248              		@ sp needed
 249 0082 10BD     		pop	{r4, pc}
 250              	.LVL21:
 251              	.L5:
 218:Src/system_stm32l0xx.c ****       {
 252              		.loc 1 218 7 is_stmt 1 view .LVU66
 218:Src/system_stm32l0xx.c ****       {
 253              		.loc 1 218 15 is_stmt 0 view .LVU67
 254 0084 134B     		ldr	r3, .L13
 255              	.LVL22:
 218:Src/system_stm32l0xx.c ****       {
 256              		.loc 1 218 15 view .LVU68
 257 0086 1B68     		ldr	r3, [r3]
 218:Src/system_stm32l0xx.c ****       {
 258              		.loc 1 218 10 view .LVU69
 259 0088 DB06     		lsls	r3, r3, #27
 260 008a 03D5     		bpl	.L9
 220:Src/system_stm32l0xx.c ****       }
 261              		.loc 1 220 9 is_stmt 1 view .LVU70
 220:Src/system_stm32l0xx.c ****       }
 262              		.loc 1 220 25 is_stmt 0 view .LVU71
 263 008c 134B     		ldr	r3, .L13+8
 264 008e 154A     		ldr	r2, .L13+16
 265              	.LVL23:
 220:Src/system_stm32l0xx.c ****       }
 266              		.loc 1 220 25 view .LVU72
 267 0090 1A60     		str	r2, [r3]
 268 0092 EBE7     		b	.L8
 269              	.LVL24:
 270              	.L9:
 224:Src/system_stm32l0xx.c ****       }
 271              		.loc 1 224 9 is_stmt 1 view .LVU73
 224:Src/system_stm32l0xx.c ****       }
 272              		.loc 1 224 25 is_stmt 0 view .LVU74
 273 0094 114B     		ldr	r3, .L13+8
 274 0096 144A     		ldr	r2, .L13+20
 275              	.LVL25:
 224:Src/system_stm32l0xx.c ****       }
 276              		.loc 1 224 25 view .LVU75
 277 0098 1A60     		str	r2, [r3]
 278 009a E7E7     		b	.L8
 279              	.LVL26:
 280              	.L6:
 228:Src/system_stm32l0xx.c ****       break;
 281              		.loc 1 228 7 is_stmt 1 view .LVU76
 228:Src/system_stm32l0xx.c ****       break;
 282              		.loc 1 228 23 is_stmt 0 view .LVU77
 283 009c 0F4B     		ldr	r3, .L13+8
 284              	.LVL27:
 228:Src/system_stm32l0xx.c ****       break;
 285              		.loc 1 228 23 view .LVU78
 286 009e 134A     		ldr	r2, .L13+24
 287              	.LVL28:
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 11


 228:Src/system_stm32l0xx.c ****       break;
 288              		.loc 1 228 23 view .LVU79
 289 00a0 1A60     		str	r2, [r3]
 229:Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 290              		.loc 1 229 7 is_stmt 1 view .LVU80
 291 00a2 E3E7     		b	.L8
 292              	.LVL29:
 293              	.L11:
 248:Src/system_stm32l0xx.c ****         }
 294              		.loc 1 248 11 view .LVU81
 248:Src/system_stm32l0xx.c ****         }
 295              		.loc 1 248 43 is_stmt 0 view .LVU82
 296 00a4 6301     		lsls	r3, r4, #5
 297 00a6 1B1B     		subs	r3, r3, r4
 298 00a8 9801     		lsls	r0, r3, #6
 299 00aa C01A     		subs	r0, r0, r3
 300 00ac C000     		lsls	r0, r0, #3
 301 00ae 0019     		adds	r0, r0, r4
 302 00b0 8002     		lsls	r0, r0, #10
 248:Src/system_stm32l0xx.c ****         }
 303              		.loc 1 248 53 view .LVU83
 304 00b2 FFF7FEFF 		bl	__aeabi_uidiv
 305              	.LVL30:
 248:Src/system_stm32l0xx.c ****         }
 306              		.loc 1 248 27 view .LVU84
 307 00b6 094B     		ldr	r3, .L13+8
 308 00b8 1860     		str	r0, [r3]
 309 00ba D7E7     		b	.L8
 310              	.LVL31:
 311              	.L10:
 254:Src/system_stm32l0xx.c ****       }
 312              		.loc 1 254 9 is_stmt 1 view .LVU85
 254:Src/system_stm32l0xx.c ****       }
 313              		.loc 1 254 41 is_stmt 0 view .LVU86
 314 00bc 6001     		lsls	r0, r4, #5
 315 00be 001B     		subs	r0, r0, r4
 316 00c0 8301     		lsls	r3, r0, #6
 317 00c2 181A     		subs	r0, r3, r0
 318 00c4 C000     		lsls	r0, r0, #3
 319 00c6 0019     		adds	r0, r0, r4
 320 00c8 4002     		lsls	r0, r0, #9
 254:Src/system_stm32l0xx.c ****       }
 321              		.loc 1 254 51 view .LVU87
 322 00ca FFF7FEFF 		bl	__aeabi_uidiv
 323              	.LVL32:
 254:Src/system_stm32l0xx.c ****       }
 324              		.loc 1 254 25 view .LVU88
 325 00ce 034B     		ldr	r3, .L13+8
 326 00d0 1860     		str	r0, [r3]
 327 00d2 CBE7     		b	.L8
 328              	.L14:
 329              		.align	2
 330              	.L13:
 331 00d4 00100240 		.word	1073876992
 332 00d8 00000000 		.word	.LANCHOR1
 333 00dc 00000000 		.word	.LANCHOR0
 334 00e0 00000000 		.word	.LANCHOR2
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 12


 335 00e4 00093D00 		.word	4000000
 336 00e8 0024F400 		.word	16000000
 337 00ec 00127A00 		.word	8000000
 338              		.cfi_endproc
 339              	.LFE35:
 341              		.global	PLLMulTable
 342              		.global	APBPrescTable
 343              		.global	AHBPrescTable
 344              		.global	SystemCoreClock
 345              		.section	.data.SystemCoreClock,"aw"
 346              		.align	2
 347              		.set	.LANCHOR0,. + 0
 350              	SystemCoreClock:
 351 0000 00002000 		.word	2097152
 352              		.section	.rodata.AHBPrescTable,"a"
 353              		.align	2
 354              		.set	.LANCHOR2,. + 0
 357              	AHBPrescTable:
 358 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 358      00000000 
 358      01020304 
 358      06
 359 000d 070809   		.ascii	"\007\010\011"
 360              		.section	.rodata.APBPrescTable,"a"
 361              		.align	2
 364              	APBPrescTable:
 365 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 365      01020304 
 366              		.section	.rodata.PLLMulTable,"a"
 367              		.align	2
 368              		.set	.LANCHOR1,. + 0
 371              	PLLMulTable:
 372 0000 03040608 		.ascii	"\003\004\006\010\014\020\030 0"
 372      0C101820 
 372      30
 373              		.text
 374              	.Letext0:
 375              		.file 2 "/usr/local/Cellar/arm-gcc-bin/9-2019-q4-major/arm-none-eabi/include/machine/_default_type
 376              		.file 3 "/usr/local/Cellar/arm-gcc-bin/9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 377              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 378              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 379              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l052xx.h"
 380              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32l0xx.c
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:16     .text.SystemInit:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:24     .text.SystemInit:0000000000000000 SystemInit
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:86     .text.SystemInit:0000000000000044 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:97     .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:104    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:331    .text.SystemCoreClockUpdate:00000000000000d4 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:371    .rodata.PLLMulTable:0000000000000000 PLLMulTable
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:364    .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:357    .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:350    .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:346    .data.SystemCoreClock:0000000000000000 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:353    .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:361    .rodata.APBPrescTable:0000000000000000 $d
/var/folders/jl/lskhb0_j53jf26l9_b8c7ppm0000gn/T//cc8V3ne6.s:367    .rodata.PLLMulTable:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
