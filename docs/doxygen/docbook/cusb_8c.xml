<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_cusb_8c" xml:lang="en-US">
<title>hub/src/cusb.c File Reference</title>
<indexterm><primary>hub/src/cusb.c</primary></indexterm>
<para>

<para>Cusb Source File. </para>
 
</para>
<programlisting>#include &lt;hub/cusb.h&gt;
#include &lt;stddef.h&gt;
#include &lt;libopencm3/stm32/syscfg.h&gt;
#include &lt;libopencm3/stm32/rcc.h&gt;
#include &lt;libopencm3/stm32/flash.h&gt;
#include &lt;libopencm3/stm32/crs.h&gt;
#include &lt;libopencm3/cm3/nvic.h&gt;
#include &lt;libopencm3/usb/usbd.h&gt;
#include &quot;../../libopencm3/lib/usb/usb_private.h&quot;
#include &lt;libopencm3/stm32/st_usbfs.h&gt;
#include &lt;libopencm3/usb/hid.h&gt;
</programlisting><simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structhid__function__descriptor">hid_function_descriptor</link></para>

<para>HID Function Descriptor. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_group___c_u_s_b___c_f_g_1ga3398c7225386f04c72fd9025fcb44734">USB_VID</link>   0x0483</para>

<para>Vendor ID. </para>
</listitem>
            <listitem><para>#define <link linkend="_group___c_u_s_b___c_f_g_1ga989c980e0b99f803f7ce0ca224cdb733">USB_PID</link>   0x5750</para>

<para>Product ID. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_group___c_u_s_b___c_f_g_1gade943db11170b477241c1a88478ad911">dev_interfaces</link> { 
<link linkend="_group___c_u_s_b___c_f_g_1ggade943db11170b477241c1a88478ad911a204042907dfd3f14df88d44ca34c9bf5">INTERFACE_HID</link> = 0, 
<link linkend="_group___c_u_s_b___c_f_g_1ggade943db11170b477241c1a88478ad911ae06ae546abc0d38b7996d28d7b81afc0">INTERFACE_CDC_COMM</link> = 1, 
<link linkend="_group___c_u_s_b___c_f_g_1ggade943db11170b477241c1a88478ad911a6cd1255b80eacfa5017757c3cba61be0">INTERFACE_CDC_DATA</link> = 2, 
<link linkend="_group___c_u_s_b___c_f_g_1ggade943db11170b477241c1a88478ad911ae38d5030fdcdb4a30b5a7c225f738de2">INTERFACE_KEYBOARD_HID</link> = 3, 

<link linkend="_group___c_u_s_b___c_f_g_1ggade943db11170b477241c1a88478ad911a6c498f5b0c6a28de865172df9f4028b6">INTERFACE_COUNT</link> = 1
 }</para>

<para>Interfaces used. </para>
</listitem>
            <listitem><para>enum <link linkend="_group___c_u_s_b___c_f_g_1ga8d04a14f4c991504e1ee2df8b5e6f05c">dev_endpoints</link> { 
<link linkend="_group___c_u_s_b___c_f_g_1gga8d04a14f4c991504e1ee2df8b5e6f05cac4a444971bf8e52ed478f89a9aea2f6d">ENDPOINT_HID_IN</link> = 0x81, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8d04a14f4c991504e1ee2df8b5e6f05cab6fa532c71274a0aa3a49297153fad04">ENDPOINT_HID_OUT</link> = 0x01, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8d04a14f4c991504e1ee2df8b5e6f05ca322fcbffd8676c20ed0b2ed1e76ee6da">ENDPOINT_CDC_COMM_IN</link> = 0x83, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8d04a14f4c991504e1ee2df8b5e6f05cadfde3aef860817b6e38f2928484b3226">ENDPOINT_CDC_DATA_IN</link> = 0x82, 

<link linkend="_group___c_u_s_b___c_f_g_1gga8d04a14f4c991504e1ee2df8b5e6f05cae7dadfb0336e7b90c79fcb7d6158a52f">ENDPOINT_CDC_DATA_OUT</link> = 0x02, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8d04a14f4c991504e1ee2df8b5e6f05cab0db9905c5948515d9bb6c56a836aa67">ENDPOINT_KEYBOARD_HID_IN</link> = 0x84
 }</para>

<para>Required endpoint addresses for interfaces. </para>
</listitem>
            <listitem><para>enum <link linkend="_group___c_u_s_b___c_f_g_1ga8e8903d0c7276e7295ce8a9aaea727b4">usb_strings_index</link> { 
<link linkend="_group___c_u_s_b___c_f_g_1gga8e8903d0c7276e7295ce8a9aaea727b4adc3ba5b9e0450cfc1586c5e96138e8fc">USB_LANGID_IDX</link> = 0, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8e8903d0c7276e7295ce8a9aaea727b4a896869157e00662b55740010582e3bae">USB_MANUFACTURER_IDX</link>, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8e8903d0c7276e7295ce8a9aaea727b4a28c69675cc67c534eb4ee5fcad847220">USB_PRODUCT_IDX</link>, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8e8903d0c7276e7295ce8a9aaea727b4ac8955a3859ce8b787eed5575ad8417c4">USB_SERIAL_IDX</link>, 

<link linkend="_group___c_u_s_b___c_f_g_1gga8e8903d0c7276e7295ce8a9aaea727b4a4424c4941324bf6b1d66433316169a9e">USB_CONFIGURATION_IDX</link>, 
<link linkend="_group___c_u_s_b___c_f_g_1gga8e8903d0c7276e7295ce8a9aaea727b4a3b345bc3edfee8aa2613f949a2db88f5">USB_INTERFACE_IDX</link>
 }</para>

<para>Location of specific strings within string descriptors stuct. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>static const struct <link linkend="_structhid__function__descriptor">hid_function_descriptor</link> <link linkend="_group___c_u_s_b___c_f_g_1ga257274706fbffd56ad7d5128a11b0096">__attribute__</link> ((packed))</para>

<para>HID Function Definition. </para>
</listitem>
            <listitem><para>static enum usbd_request_return_codes <link linkend="_group___c_u_s_b___i_n_t_1ga29b474a495e8084ca9f797e1fcf75eb8">hid_control_request</link> (usbd_device *dev, struct usb_setup_data *req, uint8_t **buf, uint16_t *len, void(**complete)(usbd_device *, struct usb_setup_data *))</para>

<para>HID Control Callback. </para>
</listitem>
            <listitem><para>void <link linkend="_group___c_u_s_b___i_n_t_1ga1bde282ff924bedfe37a99146df8b251">hid_report_callback</link> (usbd_device *<link linkend="_group___c_u_s_b___a_p_i_1ga371fec116e56a5c485a09d5dd8cd6c95">usbd_dev</link>, uint8_t ea)</para>

<para>HID Resport Callback. </para>
</listitem>
            <listitem><para>static void <link linkend="_group___c_u_s_b___i_n_t_1gaa8a5a4bf8f2341314373f98f386d19ee">hid_set_config</link> (usbd_device *dev, uint16_t wValue)</para>

<para>Configuration callback to setup device as HID. </para>
</listitem>
            <listitem><para>static void <link linkend="_group___c_u_s_b___i_n_t_1gac63b9392f307996959131c5a4e047fa4">cusb_clock_init</link> (void)</para>

<para>Setup CPU and peripheral clocks for usb. </para>
</listitem>
            <listitem><para>void <link linkend="_group___c_u_s_b___a_p_i_1gab4184b48312c430e82701746df0a97ca">cusb_init</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_group___c_u_s_b___a_p_i_1gac3db1642b64b360258b24bdd9496a390">cusb_test_poll</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>static const char *const <link linkend="_group___c_u_s_b___c_f_g_1ga2c37a11433a81e9f3e364d952a65ce5a">usb_strings</link> []</para>

<para>Structure containing all string descriptors, indexed by <link linkend="_group___c_u_s_b___c_f_g_1ga8e8903d0c7276e7295ce8a9aaea727b4">usb_strings_index</link>. </para>
</listitem>
            <listitem><para>static const struct usb_device_descriptor <link linkend="_group___c_u_s_b___c_f_g_1gaa168c0763ac7b2a074fba1297b1733b3">dev_desc</link></para>

<para>USB Device Descriptor. </para>
</listitem>
            <listitem><para>static const struct usb_endpoint_descriptor <link linkend="_group___c_u_s_b___c_f_g_1ga924c026f7b247b10ffd34e57fc9453d4">hid_interface_endpoints</link> []</para>

<para>USB Device HID Endpoint Descriptors. </para>
</listitem>
            <listitem><para>static const uint8_t <link linkend="_group___c_u_s_b___c_f_g_1ga3150d0aa42aafc82cadbd40100171fae">hid_report_descriptor</link> []</para>

<para>HID Report Descriptor. </para>
</listitem>
            <listitem><para>struct usb_hid_descriptor <link linkend="_cusb_8c_1aaac39c31cd472c2b7e766f70f43e97b4">hid_descriptor</link></para>
</listitem>
            <listitem><para>static const struct usb_interface_descriptor <link linkend="_group___c_u_s_b___c_f_g_1ga31643a6df5e6d5393f60d14c2528a8a4">hid_interface</link></para>

<para>HID Interface Descriptor. </para>
</listitem>
            <listitem><para>static const struct usb_interface <link linkend="_group___c_u_s_b___c_f_g_1ga76de0fd52b1f8961911ef2c5f5a51d1b">interfaces</link> []</para>

<para>Struct containing all used interfaces. </para>
</listitem>
            <listitem><para>static const struct usb_config_descriptor <link linkend="_group___c_u_s_b___c_f_g_1ga82f3c163f54e2a1e4c606f965227af7c">cfg_desc</link></para>

<para>USB Device Config Descriptor. </para>
</listitem>
            <listitem><para>static uint8_t <link linkend="_group___c_u_s_b___i_n_t_1ga4cfa67ae725c5211ad5ab6e6b5e2c47a">hid_report_buf</link> [64] = &quot;Default Report Buffer&quot;</para>

<para>HID Report buffer. </para>
</listitem>
            <listitem><para>static usbd_device * <link linkend="_group___c_u_s_b___a_p_i_1ga371fec116e56a5c485a09d5dd8cd6c95">usbd_dev</link></para>

<para>USB device handle. </para>
</listitem>
            <listitem><para>static uint8_t <link linkend="_group___c_u_s_b___a_p_i_1ga3f5c5e68ae07d989114524003357a6f7">usbd_control_buffer</link> [128]</para>

<para>Buffer to be used for control requests. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Cusb Source File. </para>

<para><formalpara><title>Author</title>

<para>Richard Davies </para>
</formalpara>
<formalpara><title>Date</title>

<para>27/Dec/2020 </para>
</formalpara>
</para>
<para>
Definition in file <link linkend="_cusb_8c_source">cusb.c</link>.</para>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_cusb_8c_1a96e3f5ba4a7a1c8bb1b8fca4d4ded8e8"/>    <section>
    <title>bReportDescriptorType</title>
<indexterm><primary>bReportDescriptorType</primary><secondary>cusb.c</secondary></indexterm>
<indexterm><primary>cusb.c</primary><secondary>bReportDescriptorType</secondary></indexterm>
<para><computeroutput>uint8_t bReportDescriptorType</computeroutput></para><para>
Definition at line <link linkend="_cusb_8c_source_1l00209">209</link> of file <link linkend="_cusb_8c_source">cusb.c</link>.</para>
    </section><anchor xml:id="_cusb_8c_1aaac39c31cd472c2b7e766f70f43e97b4"/>    <section>
    <title>hid_descriptor</title>
<indexterm><primary>hid_descriptor</primary><secondary>cusb.c</secondary></indexterm>
<indexterm><primary>cusb.c</primary><secondary>hid_descriptor</secondary></indexterm>
<para><computeroutput>struct usb_hid_descriptor hid_descriptor</computeroutput></para><para>
Definition at line <link linkend="_cusb_8c_source_1l00203">203</link> of file <link linkend="_cusb_8c_source">cusb.c</link>.</para>
    </section><anchor xml:id="_cusb_8c_1a55bf7164e75ed7bce74dfae2c2680992"/>    <section>
    <title>wDescriptorLength</title>
<indexterm><primary>wDescriptorLength</primary><secondary>cusb.c</secondary></indexterm>
<indexterm><primary>cusb.c</primary><secondary>wDescriptorLength</secondary></indexterm>
<para><computeroutput>uint16_t wDescriptorLength</computeroutput></para><para>
Definition at line <link linkend="_cusb_8c_source_1l00210">210</link> of file <link linkend="_cusb_8c_source">cusb.c</link>.</para>
</section>
</section>
</section>
